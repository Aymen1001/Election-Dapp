{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "CandidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "VoteEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "VoteOpened",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidatesList",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "id",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "votesCount",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionCurrentState",
      "outputs": [
        {
          "internalType": "enum Election.ElectionState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCandidatesList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "id",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint32",
              "name": "votesCount",
              "type": "uint32"
            }
          ],
          "internalType": "struct Election.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResult",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "id",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint32",
              "name": "votesCount",
              "type": "uint32"
            }
          ],
          "internalType": "struct Election.Candidate",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "getVoteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfCandidates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voteDuration",
          "type": "uint256"
        }
      ],
      "name": "openVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalNumberOfVoters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteEndTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Election.sol"
  },
  "ast": {
    "absolutePath": "contracts/Election.sol",
    "exportedSymbols": {
      "Election": [
        335
      ]
    },
    "id": 336,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Election",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 335,
        "linearizedBaseContracts": [
          335
        ],
        "name": "Election",
        "nameLocation": "67:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 3,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "190:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "175:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38527727",
            "id": 6,
            "mutability": "mutable",
            "name": "totalNumberOfVoters",
            "nameLocation": "216:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "201:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "238:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9c84bb27",
            "id": 9,
            "mutability": "mutable",
            "name": "numberOfCandidates",
            "nameLocation": "260:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "245:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "281:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd631797",
            "id": 12,
            "mutability": "mutable",
            "name": "electionCurrentState",
            "nameLocation": "310:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "289:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ElectionState_$18",
              "typeString": "enum Election.ElectionState"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "ElectionState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18,
                "src": "289:13:0"
              },
              "referencedDeclaration": 18,
              "src": "289:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ElectionState_$18",
                "typeString": "enum Election.ElectionState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9297cf8a",
            "id": 14,
            "mutability": "mutable",
            "name": "voteEndTimestamp",
            "nameLocation": "351:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "336:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "336:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Election.ElectionState",
            "id": 18,
            "members": [
              {
                "id": 15,
                "name": "NOTOPENYET",
                "nameLocation": "403:10:0",
                "nodeType": "EnumValue",
                "src": "403:10:0"
              },
              {
                "id": 16,
                "name": "OPEN",
                "nameLocation": "423:4:0",
                "nodeType": "EnumValue",
                "src": "423:4:0"
              },
              {
                "id": 17,
                "name": "ENDED",
                "nameLocation": "437:5:0",
                "nodeType": "EnumValue",
                "src": "437:5:0"
              }
            ],
            "name": "ElectionState",
            "nameLocation": "379:13:0",
            "nodeType": "EnumDefinition",
            "src": "374:74:0"
          },
          {
            "canonicalName": "Election.Candidate",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "487:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "481:8:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "481:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "506:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "499:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 21,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "499:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "votesCount",
                "nameLocation": "527:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "520:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "461:9:0",
            "nodeType": "StructDefinition",
            "scope": 335,
            "src": "454:90:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Election.Vote",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "hasVoted",
                "nameLocation": "577:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "572:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 26,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "572:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "candidateId",
                "nameLocation": "603:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "595:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "595:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vote",
            "nameLocation": "557:4:0",
            "nodeType": "StructDefinition",
            "scope": 335,
            "src": "550:71:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "df2d5ec7",
            "id": 34,
            "mutability": "mutable",
            "name": "candidatesList",
            "nameLocation": "646:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "627:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
              "typeString": "struct Election.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25,
                  "src": "627:9:0"
                },
                "referencedDeclaration": 25,
                "src": "627:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$25_storage_ptr",
                  "typeString": "struct Election.Candidate"
                }
              },
              "id": 33,
              "nodeType": "ArrayTypeName",
              "src": "627:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage_ptr",
                "typeString": "struct Election.Candidate[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "votes",
            "nameLocation": "691:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "666:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$30_storage_$",
              "typeString": "mapping(address => struct Election.Vote)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 35,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "674:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "666:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$30_storage_$",
                "typeString": "mapping(address => struct Election.Vote)"
              },
              "valueType": {
                "id": 37,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 36,
                  "name": "Vote",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "685:4:0"
                },
                "referencedDeclaration": 30,
                "src": "685:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vote_$30_storage_ptr",
                  "typeString": "struct Election.Vote"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 43,
            "name": "VoteOpened",
            "nameLocation": "799:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "818:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "810:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:19:0"
            },
            "src": "793:36:0"
          },
          {
            "anonymous": false,
            "id": 47,
            "name": "VoteEnded",
            "nameLocation": "840:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "858:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "850:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "849:19:0"
            },
            "src": "834:35:0"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "CandidateAdded",
            "nameLocation": "880:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "903:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "895:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "914:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "907:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "894:25:0"
            },
            "src": "874:46:0"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "1040:80:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 56,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1058:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1058:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 58,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1072:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1058:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792061646d696e2066756e6374696f6e73",
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1079:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf918ab479fd206f03f508b5fbf237a8c68754c4548f0e61cd84d4a12906cc0a",
                          "typeString": "literal_string \"only admin functions\""
                        },
                        "value": "only admin functions"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf918ab479fd206f03f508b5fbf237a8c68754c4548f0e61cd84d4a12906cc0a",
                          "typeString": "literal_string \"only admin functions\""
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1050:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:52:0"
                },
                {
                  "id": 63,
                  "nodeType": "PlaceholderStatement",
                  "src": "1112:1:0"
                }
              ]
            },
            "id": 65,
            "name": "onlyAdmin",
            "nameLocation": "1028:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:2:0"
            },
            "src": "1019:101:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1173:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ElectionState_$18",
                          "typeString": "enum Election.ElectionState"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 71,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1191:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ElectionState_$18",
                            "typeString": "enum Election.ElectionState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 72,
                          "name": "electionCurrentState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1201:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ElectionState_$18",
                            "typeString": "enum Election.ElectionState"
                          }
                        },
                        "src": "1191:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1223:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1183:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:43:0"
                },
                {
                  "id": 77,
                  "nodeType": "PlaceholderStatement",
                  "src": "1236:1:0"
                }
              ]
            },
            "id": 79,
            "name": "isElectionState",
            "nameLocation": "1135:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1165:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1151:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ElectionState_$18",
                    "typeString": "enum Election.ElectionState"
                  },
                  "typeName": {
                    "id": 67,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66,
                      "name": "ElectionState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "1151:13:0"
                    },
                    "referencedDeclaration": 18,
                    "src": "1151:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1150:22:0"
            },
            "src": "1126:118:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1359:92:0",
              "statements": [
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1369:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 83,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1377:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1377:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:18:0"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "electionCurrentState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1397:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ElectionState_$18",
                        "typeString": "enum Election.ElectionState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 88,
                        "name": "ElectionState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1420:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ElectionState_$18_$",
                          "typeString": "type(enum Election.ElectionState)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "NOTOPENYET",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1420:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ElectionState_$18",
                        "typeString": "enum Election.ElectionState"
                      }
                    },
                    "src": "1397:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:47:0"
                }
              ]
            },
            "id": 93,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:0"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1359:0:0"
            },
            "scope": 335,
            "src": "1345:106:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1649:258:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 103,
                          "name": "_candidateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1667:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 104,
                          "name": "numberOfCandidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1682:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1667:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1659:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1659:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1659:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1719:27:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 109,
                              "name": "votes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "1720:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$30_storage_$",
                                "typeString": "mapping(address => struct Election.Vote storage ref)"
                              }
                            },
                            "id": 112,
                            "indexExpression": {
                              "expression": {
                                "id": 110,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1726:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1726:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1720:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$30_storage",
                              "typeString": "struct Election.Vote storage ref"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasVoted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "1720:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920766f746564",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1748:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        },
                        "value": "Already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1711:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:53:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 118,
                        "name": "votes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1774:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$30_storage_$",
                          "typeString": "mapping(address => struct Election.Vote storage ref)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "expression": {
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1780:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1780:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1774:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$30_storage",
                        "typeString": "struct Election.Vote storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1799:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 124,
                          "name": "_candidateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1805:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 122,
                        "name": "Vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1794:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Vote_$30_storage_ptr_$",
                          "typeString": "type(struct Election.Vote storage pointer)"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1794:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$30_memory_ptr",
                        "typeString": "struct Election.Vote memory"
                      }
                    },
                    "src": "1774:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vote_$30_storage",
                      "typeString": "struct Election.Vote storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:44:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1828:41:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 128,
                          "name": "candidatesList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1828:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                            "typeString": "struct Election.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "id": 129,
                          "name": "_candidateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1843:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1828:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$25_storage",
                          "typeString": "struct Election.Candidate storage ref"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "votesCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "1828:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1828:41:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1879:21:0",
                    "subExpression": {
                      "id": 134,
                      "name": "totalNumberOfVoters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1879:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1879:21:0"
                }
              ]
            },
            "functionSelector": "0121b93f",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 98,
                      "name": "ElectionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1625:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ElectionState_$18_$",
                        "typeString": "type(enum Election.ElectionState)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "OPEN",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16,
                    "src": "1625:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  }
                ],
                "id": 100,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 97,
                  "name": "isElectionState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79,
                  "src": "1609:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1609:35:0"
              }
            ],
            "name": "vote",
            "nameLocation": "1559:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "1572:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1564:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:22:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:0:0"
            },
            "scope": 335,
            "src": "1550:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1987:63:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 145,
                        "name": "candidatesList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2004:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                          "typeString": "struct Election.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 147,
                      "indexExpression": {
                        "id": 146,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2019:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2004:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$25_storage",
                        "typeString": "struct Election.Candidate storage ref"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votesCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "2004:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "1997:46:0"
                }
              ]
            },
            "functionSelector": "b2c2f2e8",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVoteCount",
            "nameLocation": "1922:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "1943:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1935:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1935:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:22:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1978:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1977:9:0"
            },
            "scope": 335,
            "src": "1913:137:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "2122:108:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 159,
                            "name": "votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2140:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$30_storage_$",
                              "typeString": "mapping(address => struct Election.Vote storage ref)"
                            }
                          },
                          "id": 161,
                          "indexExpression": {
                            "id": 160,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "2146:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2140:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$30_storage",
                            "typeString": "struct Election.Vote storage ref"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hasVoted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "2140:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572204469646e277420766f7465",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2163:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1355e77546e1ae5c07f9044586597b1de82ea1c12b185495354944a3527d6c1",
                          "typeString": "literal_string \"User Didn't vote\""
                        },
                        "value": "User Didn't vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1355e77546e1ae5c07f9044586597b1de82ea1c12b185495354944a3527d6c1",
                          "typeString": "literal_string \"User Didn't vote\""
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2132:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:50:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 166,
                        "name": "votes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2199:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vote_$30_storage_$",
                          "typeString": "mapping(address => struct Election.Vote storage ref)"
                        }
                      },
                      "id": 168,
                      "indexExpression": {
                        "id": 167,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2205:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2199:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$30_storage",
                        "typeString": "struct Election.Vote storage ref"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "candidateId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "2199:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 170,
                  "nodeType": "Return",
                  "src": "2192:31:0"
                }
              ]
            },
            "functionSelector": "d4923d4e",
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserVote",
            "nameLocation": "2065:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2085:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "2077:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2077:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2076:15:0"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "2113:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2112:9:0"
            },
            "scope": 335,
            "src": "2056:174:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "2306:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 179,
                    "name": "candidatesList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "2323:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                      "typeString": "struct Election.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "2316:21:0"
                }
              ]
            },
            "functionSelector": "4aba5f34",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCandidatesList",
            "nameLocation": "2245:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:2:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "2286:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Election.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 175,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 174,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "2286:9:0"
                      },
                      "referencedDeclaration": 25,
                      "src": "2286:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$25_storage_ptr",
                        "typeString": "struct Election.Candidate"
                      }
                    },
                    "id": 176,
                    "nodeType": "ArrayTypeName",
                    "src": "2286:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Election.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:20:0"
            },
            "scope": 335,
            "src": "2236:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "2483:338:0",
              "statements": [
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "maxCount",
                      "nameLocation": "2501:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 235,
                      "src": "2493:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2493:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2512:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2493:20:0"
                },
                {
                  "assignments": [
                    197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 197,
                      "mutability": "mutable",
                      "name": "winnerId",
                      "nameLocation": "2531:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 235,
                      "src": "2523:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 196,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2523:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 199,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2542:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2523:20:0"
                },
                {
                  "body": {
                    "id": 229,
                    "nodeType": "Block",
                    "src": "2603:171:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 210,
                                "name": "candidatesList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2621:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                                  "typeString": "struct Election.Candidate storage ref[] storage ref"
                                }
                              },
                              "id": 212,
                              "indexExpression": {
                                "id": 211,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "2636:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2621:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$25_storage",
                                "typeString": "struct Election.Candidate storage ref"
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votesCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "2621:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 214,
                            "name": "maxCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "2652:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2621:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 228,
                        "nodeType": "IfStatement",
                        "src": "2617:147:0",
                        "trueBody": {
                          "id": 227,
                          "nodeType": "Block",
                          "src": "2662:102:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 216,
                                  "name": "maxCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 193,
                                  "src": "2680:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 217,
                                      "name": "candidatesList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34,
                                      "src": "2691:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                                        "typeString": "struct Election.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 219,
                                    "indexExpression": {
                                      "id": 218,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 201,
                                      "src": "2706:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2691:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$25_storage",
                                      "typeString": "struct Election.Candidate storage ref"
                                    }
                                  },
                                  "id": 220,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votesCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24,
                                  "src": "2691:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "2680:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 222,
                              "nodeType": "ExpressionStatement",
                              "src": "2680:39:0"
                            },
                            {
                              "expression": {
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 223,
                                  "name": "winnerId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 197,
                                  "src": "2737:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 224,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 201,
                                  "src": "2748:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2737:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 226,
                              "nodeType": "ExpressionStatement",
                              "src": "2737:12:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 204,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "2574:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 205,
                      "name": "numberOfCandidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2578:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2574:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 230,
                  "initializationExpression": {
                    "assignments": [
                      201
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2567:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 230,
                        "src": "2559:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2559:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 203,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2571:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2559:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2598:3:0",
                      "subExpression": {
                        "id": 207,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2598:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 209,
                    "nodeType": "ExpressionStatement",
                    "src": "2598:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2554:220:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 231,
                      "name": "candidatesList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2790:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                        "typeString": "struct Election.Candidate storage ref[] storage ref"
                      }
                    },
                    "id": 233,
                    "indexExpression": {
                      "id": 232,
                      "name": "winnerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2805:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2790:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$25_storage",
                      "typeString": "struct Election.Candidate storage ref"
                    }
                  },
                  "functionReturnParameters": 191,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "2783:31:0"
                }
              ]
            },
            "functionSelector": "de292789",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 185,
                      "name": "ElectionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2423:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ElectionState_$18_$",
                        "typeString": "type(enum Election.ElectionState)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ENDED",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17,
                    "src": "2423:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  }
                ],
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "isElectionState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79,
                  "src": "2407:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2407:36:0"
              }
            ],
            "name": "getResult",
            "nameLocation": "2359:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:2:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2461:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Candidate_$25_memory_ptr",
                    "typeString": "struct Election.Candidate"
                  },
                  "typeName": {
                    "id": 189,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 188,
                      "name": "Candidate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "2461:9:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "2461:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$25_storage_ptr",
                      "typeString": "struct Election.Candidate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2460:18:0"
            },
            "scope": 335,
            "src": "2350:471:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "3056:280:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 248,
                            "name": "candidatesList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3087:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                              "typeString": "struct Election.Candidate storage ref[] storage ref"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3087:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3111:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3087:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206f70656e20656c656374696f6e2077697468206e6f2063616e646964617465",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3126:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1948e8ec1b36d804ebe2b23926a6015f64d8a5f17a2592b7960cab5744d006f6",
                          "typeString": "literal_string \"Can't open election with no candidate\""
                        },
                        "value": "Can't open election with no candidate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1948e8ec1b36d804ebe2b23926a6015f64d8a5f17a2592b7960cab5744d006f6",
                          "typeString": "literal_string \"Can't open election with no candidate\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3066:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:109:0"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 255,
                      "name": "voteEndTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "3185:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 256,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3204:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3204:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 258,
                        "name": "_voteDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "3222:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3204:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3185:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:50:0"
                },
                {
                  "expression": {
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 262,
                      "name": "electionCurrentState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3245:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ElectionState_$18",
                        "typeString": "enum Election.ElectionState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 263,
                        "name": "ElectionState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "3268:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ElectionState_$18_$",
                          "typeString": "type(enum Election.ElectionState)"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "3268:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ElectionState_$18",
                        "typeString": "enum Election.ElectionState"
                      }
                    },
                    "src": "3245:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3245:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 268,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3313:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3313:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 267,
                      "name": "VoteOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "3302:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3302:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "EmitStatement",
                  "src": "3297:32:0"
                }
              ]
            },
            "functionSelector": "5f2ba6b2",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 241,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 240,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "2992:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2992:9:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 243,
                      "name": "ElectionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3026:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ElectionState_$18_$",
                        "typeString": "type(enum Election.ElectionState)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NOTOPENYET",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 15,
                    "src": "3026:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  }
                ],
                "id": 245,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 242,
                  "name": "isElectionState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79,
                  "src": "3010:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3010:41:0"
              }
            ],
            "name": "openVoting",
            "nameLocation": "2935:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "_voteDuration",
                  "nameLocation": "2954:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2946:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2945:23:0"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:0"
            },
            "scope": 335,
            "src": "2926:410:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "3472:189:0",
              "statements": [
                {
                  "assignments": [
                    285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 285,
                      "mutability": "mutable",
                      "name": "newId",
                      "nameLocation": "3490:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 309,
                      "src": "3482:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 284,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3482:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 287,
                  "initialValue": {
                    "id": 286,
                    "name": "numberOfCandidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "3498:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3482:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 294,
                                "name": "newId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 285,
                                "src": "3562:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3556:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 292,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3556:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3556:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 296,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "3570:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3577:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 291,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "3546:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$25_storage_ptr_$",
                            "typeString": "type(struct Election.Candidate storage pointer)"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3546:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$25_memory_ptr",
                          "typeString": "struct Election.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$25_memory_ptr",
                          "typeString": "struct Election.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 288,
                        "name": "candidatesList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "3526:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$25_storage_$dyn_storage",
                          "typeString": "struct Election.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3526:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$25_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$25_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$25_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Election.Candidate storage ref[] storage pointer,struct Election.Candidate storage ref)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:54:0"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3590:20:0",
                    "subExpression": {
                      "id": 301,
                      "name": "numberOfCandidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3590:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:20:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "newId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "3641:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 306,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3648:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 304,
                      "name": "CandidateAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "3626:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3626:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "EmitStatement",
                  "src": "3621:33:0"
                }
              ]
            },
            "functionSelector": "462e91ec",
            "id": 310,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 277,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "3408:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3408:9:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 280,
                      "name": "ElectionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3442:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ElectionState_$18_$",
                        "typeString": "type(enum Election.ElectionState)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NOTOPENYET",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 15,
                    "src": "3442:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  }
                ],
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 279,
                  "name": "isElectionState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79,
                  "src": "3426:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3426:41:0"
              }
            ],
            "name": "addCandidate",
            "nameLocation": "3351:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3378:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "3364:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3363:21:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3472:0:0"
            },
            "scope": 335,
            "src": "3342:319:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "3707:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 316,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3725:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3725:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 318,
                          "name": "voteEndTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "3744:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3725:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465206475726174696f6e206e6f7420656e646564",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fd45c4b7867b8141ece109b64ef7ece12054b305677bc95ccf290720a16b8e7",
                          "typeString": "literal_string \"Vote duration not ended\""
                        },
                        "value": "Vote duration not ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fd45c4b7867b8141ece109b64ef7ece12054b305677bc95ccf290720a16b8e7",
                          "typeString": "literal_string \"Vote duration not ended\""
                        }
                      ],
                      "id": 315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3717:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:71:0"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "electionCurrentState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3798:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ElectionState_$18",
                        "typeString": "enum Election.ElectionState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 324,
                        "name": "ElectionState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "3821:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ElectionState_$18_$",
                          "typeString": "type(enum Election.ElectionState)"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ENDED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "3821:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ElectionState_$18",
                        "typeString": "enum Election.ElectionState"
                      }
                    },
                    "src": "3798:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ElectionState_$18",
                      "typeString": "enum Election.ElectionState"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 329,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3866:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3866:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 328,
                      "name": "VoteEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "3856:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "EmitStatement",
                  "src": "3851:31:0"
                }
              ]
            },
            "functionSelector": "c3403ddf",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 313,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 312,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "3697:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3697:9:0"
              }
            ],
            "name": "endVoting",
            "nameLocation": "3676:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3685:2:0"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:0:0"
            },
            "scope": 335,
            "src": "3667:222:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 336,
        "src": "58:3833:0",
        "usedErrors": []
      }
    ],
    "src": "33:3859:0"
  },
  "bytecode": "",
  "bytecodeSha1": "f767fb570fe18b1ac5dd07772efd7495f97249d1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "Election",
  "coverageMap": {
    "branches": {
      "0": {
        "Election.endVoting": {
          "25": [
            3725,
            3760,
            true
          ]
        },
        "Election.getResult": {
          "27": [
            1191,
            1221,
            true
          ],
          "28": [
            2621,
            2660,
            false
          ]
        },
        "Election.getUserVote": {
          "26": [
            2140,
            2161,
            true
          ]
        },
        "Election.vote": {
          "23": [
            1667,
            1700,
            true
          ],
          "24": [
            1719,
            1746,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Election.addCandidate": {
          "5": [
            3526,
            3580
          ],
          "6": [
            3590,
            3610
          ],
          "7": [
            3621,
            3654
          ]
        },
        "Election.endVoting": {
          "14": [
            3717,
            3788
          ],
          "15": [
            3798,
            3840
          ],
          "16": [
            3851,
            3882
          ]
        },
        "Election.getCandidatesList": {
          "8": [
            2316,
            2337
          ]
        },
        "Election.getResult": {
          "19": [
            2680,
            2719
          ],
          "20": [
            2737,
            2749
          ],
          "21": [
            2598,
            2601
          ],
          "22": [
            2783,
            2814
          ]
        },
        "Election.getUserVote": {
          "17": [
            2132,
            2182
          ],
          "18": [
            2192,
            2223
          ]
        },
        "Election.getVoteCount": {
          "13": [
            1997,
            2043
          ]
        },
        "Election.openVoting": {
          "9": [
            3066,
            3175
          ],
          "10": [
            3185,
            3235
          ],
          "11": [
            3245,
            3286
          ],
          "12": [
            3297,
            3329
          ]
        },
        "Election.vote": {
          "0": [
            1659,
            1701
          ],
          "1": [
            1711,
            1764
          ],
          "2": [
            1774,
            1818
          ],
          "3": [
            1828,
            1869
          ],
          "4": [
            1879,
            1900
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "58:3833:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:357;;;;;;:::i;:::-;;:::i;:::-;;201:38;;;;;;;;;345:25:1;;;333:2;318:18;201:38:0;;;;;;;;3342:319;;;;;;:::i;:::-;;:::i;2236:108::-;;;:::i;:::-;;;;;;;:::i;2926:410::-;;;;;;:::i;:::-;;:::i;336:31::-;;;;;;245:37;;;;;;1913:137;;;;;;:::i;:::-;;:::i;3667:222::-;;;:::i;2056:174::-;;;;;;:::i;:::-;;:::i;289:41::-;;;;;;;;;;;;;;;;:::i;2350:471::-;;;:::i;:::-;;;;;;;:::i;627:33::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;175:20::-;;;;;-1:-1:-1;;;;;175:20:0;;;;;;-1:-1:-1;;;;;4722:32:1;;;4704:51;;4692:2;4677:18;175:20:0;4558:203:1;1550:357:0;1201:20;;1625:18;;1201:20;;1191:30;;;;;;;;:::i;:::-;:6;:30;;;;;;;;:::i;:::-;;1183:43;;;;-1:-1:-1;;;1183:43:0;;4968:2:1;1183:43:0;;;4950:21:1;-1:-1:-1;4987:18:1;;;4980:29;5026:18;;1183:43:0;;;;;;;;;1682:18:::1;;1667:12;:33;1659:42;;;::::0;::::1;;1726:10;1720:17;::::0;;;:5:::1;:17;::::0;;;;:26;::::1;;1719:27;1711:53;;;::::0;-1:-1:-1;;;1711:53:0;;5257:2:1;1711:53:0::1;::::0;::::1;5239:21:1::0;5296:2;5276:18;;;5269:30;-1:-1:-1;;;5315:18:1;;;5308:43;5368:18;;1711:53:0::1;5055:337:1::0;1711:53:0::1;1794:24;::::0;;;;::::1;::::0;;1799:4:::1;1794:24:::0;;;::::1;::::0;;::::1;::::0;;;1780:10:::1;-1:-1:-1::0;1774:17:0;;;:5:::1;:17:::0;;;;;;:44;;;;-1:-1:-1;;1774:44:0::1;::::0;::::1;;;::::0;;;;;::::1;::::0;1828:14:::1;:28:::0;;1794:24;;1828:28;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;:39:::1;:28;::::0;;::::1;;:39;:41:::0;;::::1;;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1879:19;;:21;;;;;;;;;:::i;:::-;;;;;;1550:357:::0;;:::o;3342:319::-;1072:5;;-1:-1:-1;;;;;1072:5:0;1058:10;:19;1050:52;;;;-1:-1:-1;;;1050:52:0;;;;;;;:::i;:::-;1201:20:::1;::::0;3442:24:::1;::::0;1201:20:::1;;1191:30;::::0;::::1;;;;;;:::i;:::-;:6;:30;;;;;;;;:::i;:::-;;1183:43;;;::::0;-1:-1:-1;;;1183:43:0;;4968:2:1;1183:43:0::1;::::0;::::1;4950:21:1::0;-1:-1:-1;4987:18:1;;;4980:29;5026:18;;1183:43:0::1;4766:284:1::0;1183:43:0::1;3498:18:::2;::::0;3546:33:::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;-1:-1:-1;3546:33:0;;;;;;3526:14:::2;:54:::0;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;3526:54:0::2;::::0;;;::::2;;::::0;;;;;3546:33;;3526:54;;::::2;::::0;;;;;;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;3526:54:0::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;3526:54:0::2;;::::0;;::::2;::::0;;;::::2;::::0;;3590:20;;;-1:-1:-1;3590:20:0::2;::::0;::::2;:::i;:::-;;;;;;3626:28;3641:5;3648;3626:28;;;;;;;:::i;:::-;;;;;;;;3472:189;1112:1:::1;3342:319:::0;:::o;2236:108::-;2286:18;2323:14;2316:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2316:21:0;;;-1:-1:-1;;2316:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2236:108;:::o;2926:410::-;1072:5;;-1:-1:-1;;;;;1072:5:0;1058:10;:19;1050:52;;;;-1:-1:-1;;;1050:52:0;;;;;;;:::i;:::-;1201:20:::1;::::0;3026:24:::1;::::0;1201:20:::1;;1191:30;::::0;::::1;;;;;;:::i;:::-;:6;:30;;;;;;;;:::i;:::-;;1183:43;;;::::0;-1:-1:-1;;;1183:43:0;;4968:2:1;1183:43:0::1;::::0;::::1;4950:21:1::0;-1:-1:-1;4987:18:1;;;4980:29;5026:18;;1183:43:0::1;4766:284:1::0;1183:43:0::1;3087:14:::2;:21:::0;3066:109:::2;;;::::0;-1:-1:-1;;;3066:109:0;;7239:2:1;3066:109:0::2;::::0;::::2;7221:21:1::0;7278:2;7258:18;;;7251:30;7317:34;7297:18;;;7290:62;-1:-1:-1;;;7368:18:1;;;7361:35;7413:19;;3066:109:0::2;7037:401:1::0;3066:109:0::2;3204:31;3222:13:::0;3204:15:::2;:31;:::i;:::-;3185:16;:50:::0;3245:20:::2;:41:::0;;-1:-1:-1;;3245:41:0::2;3268:18;3245:41;::::0;;3302:27:::2;::::0;3313:15:::2;345:25:1::0;;3302:27:0::2;::::0;333:2:1;318:18;3302:27:0::2;;;;;;;1112:1:::1;2926:410:::0;:::o;1913:137::-;1978:7;2004:14;2019:12;2004:28;;;;;;;;:::i;:::-;;;;;;;;;:39;:28;;;;;:39;;;;;1913:137;-1:-1:-1;;1913:137:0:o;3667:222::-;1072:5;;-1:-1:-1;;;;;1072:5:0;1058:10;:19;1050:52;;;;-1:-1:-1;;;1050:52:0;;;;;;;:::i;:::-;3744:16:::1;;3725:15;:35;;3717:71;;;::::0;-1:-1:-1;;;3717:71:0;;7778:2:1;3717:71:0::1;::::0;::::1;7760:21:1::0;7817:2;7797:18;;;7790:30;7856:25;7836:18;;;7829:53;7899:18;;3717:71:0::1;7576:347:1::0;3717:71:0::1;3798:20;:42:::0;;-1:-1:-1;;3798:42:0::1;3821:19;3798:42;::::0;;3856:26:::1;::::0;3866:15:::1;345:25:1::0;;3856:26:0::1;::::0;333:2:1;318:18;3856:26:0::1;;;;;;;3667:222::o:0;2056:174::-;-1:-1:-1;;;;;2140:12:0;;2113:7;2140:12;;;:5;:12;;;;;:21;;;2132:50;;;;-1:-1:-1;;;2132:50:0;;8130:2:1;2132:50:0;;;8112:21:1;8169:2;8149:18;;;8142:30;-1:-1:-1;;;8188:18:1;;;8181:46;8244:18;;2132:50:0;7928:340:1;2132:50:0;-1:-1:-1;;;;;;2199:12:0;;;;;:5;:12;;;;;:24;;;;2056:174::o;2350:471::-;2461:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2461:16:0;1201:20;;2423:19;;1201:20;;1191:30;;;;;;;;:::i;:::-;:6;:30;;;;;;;;:::i;:::-;;1183:43;;;;-1:-1:-1;;;1183:43:0;;4968:2:1;1183:43:0;;;4950:21:1;-1:-1:-1;4987:18:1;;;4980:29;5026:18;;1183:43:0;4766:284:1;1183:43:0;2493:16:::1;2523::::0;2559:9:::1;2554:220;2578:18;;2574:1;:22;2554:220;;;2652:8;2621:14;2636:1;2621:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:28:::1;:17;::::0;;::::1;;:28;::::0;::::1;;:39;2617:147;;;2691:14;2706:1;2691:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:28:::1;:17;::::0;;::::1;;:28;::::0;::::1;;::::0;-1:-1:-1;2748:1:0;-1:-1:-1;2748:1:0;2617:147:::1;2598:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2554:220;;;;2790:14;2805:8;2790:24;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;2783:31:::1;::::0;;::::1;::::0;::::1;::::0;;;2790:24:::1;::::0;;::::1;;2783:31:::0;;::::1;;::::0;;;;::::1;::::0;;;;2790:24;;2783:31;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;2783:31:0;;;-1:-1:-1;;2783:31:0::1;::::0;;;::::1;::::0;::::1;;;::::0;;::::1;::::0;;-1:-1:-1;;;1236:1:0::1;2350:471:::0;;:::o;627:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:33:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;627:33:0;;;;;;;-1:-1:-1;;627:33:0;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;381:127::-;442:10;437:3;433:20;430:1;423:31;473:4;470:1;463:15;497:4;494:1;487:15;513:922;582:6;635:2;623:9;614:7;610:23;606:32;603:52;;;651:1;648;641:12;603:52;691:9;678:23;720:18;761:2;753:6;750:14;747:34;;;777:1;774;767:12;747:34;815:6;804:9;800:22;790:32;;860:7;853:4;849:2;845:13;841:27;831:55;;882:1;879;872:12;831:55;918:2;905:16;940:2;936;933:10;930:36;;;946:18;;:::i;:::-;1021:2;1015:9;989:2;1075:13;;-1:-1:-1;;1071:22:1;;;1095:2;1067:31;1063:40;1051:53;;;1119:18;;;1139:22;;;1116:46;1113:72;;;1165:18;;:::i;:::-;1205:10;1201:2;1194:22;1240:2;1232:6;1225:18;1280:7;1275:2;1270;1266;1262:11;1258:20;1255:33;1252:53;;;1301:1;1298;1291:12;1252:53;1357:2;1352;1348;1344:11;1339:2;1331:6;1327:15;1314:46;1402:1;1380:15;;;1397:2;1376:24;1369:35;;;;-1:-1:-1;1384:6:1;513:922;-1:-1:-1;;;;;513:922:1:o;1440:472::-;1482:3;1520:5;1514:12;1547:6;1542:3;1535:19;1572:1;1582:162;1596:6;1593:1;1590:13;1582:162;;;1658:4;1714:13;;;1710:22;;1704:29;1686:11;;;1682:20;;1675:59;1611:12;1582:162;;;1762:6;1759:1;1756:13;1753:87;;;1828:1;1821:4;1812:6;1807:3;1803:16;1799:27;1792:38;1753:87;-1:-1:-1;1894:2:1;1873:15;-1:-1:-1;;1869:29:1;1860:39;;;;1901:4;1856:50;;1440:472;-1:-1:-1;;1440:472:1:o;1917:362::-;2017:4;2009:5;2003:12;1999:23;1994:3;1987:36;1969:3;2069:4;2062:5;2058:16;2052:23;2107:4;2100;2095:3;2091:14;2084:28;2133:47;2174:4;2169:3;2165:14;2151:12;2133:47;:::i;:::-;2233:4;2222:16;;;2216:23;2241:10;2212:40;2196:14;;;;2189:64;;;;-1:-1:-1;2121:59:1;1917:362;-1:-1:-1;1917:362:1:o;2284:843::-;2476:4;2505:2;2545;2534:9;2530:18;2575:2;2564:9;2557:21;2598:6;2633;2627:13;2664:6;2656;2649:22;2702:2;2691:9;2687:18;2680:25;;2764:2;2754:6;2751:1;2747:14;2736:9;2732:30;2728:39;2714:53;;2802:2;2794:6;2790:15;2823:1;2833:265;2847:6;2844:1;2841:13;2833:265;;;2940:2;2936:7;2924:9;2916:6;2912:22;2908:36;2903:3;2896:49;2968:50;3011:6;3002;2996:13;2968:50;:::i;:::-;2958:60;-1:-1:-1;3076:12:1;;;;3041:15;;;;2869:1;2862:9;2833:265;;;-1:-1:-1;3115:6:1;;2284:843;-1:-1:-1;;;;;;;2284:843:1:o;3132:286::-;3191:6;3244:2;3232:9;3223:7;3219:23;3215:32;3212:52;;;3260:1;3257;3250:12;3212:52;3286:23;;-1:-1:-1;;;;;3338:31:1;;3328:42;;3318:70;;3384:1;3381;3374:12;3318:70;3407:5;3132:286;-1:-1:-1;;;3132:286:1:o;3423:127::-;3484:10;3479:3;3475:20;3472:1;3465:31;3515:4;3512:1;3505:15;3539:4;3536:1;3529:15;3555:344;3703:2;3688:18;;3736:1;3725:13;;3715:144;;3781:10;3776:3;3772:20;3769:1;3762:31;3816:4;3813:1;3806:15;3844:4;3841:1;3834:15;3715:144;3868:25;;;3555:344;:::o;3904:260::-;4083:2;4072:9;4065:21;4046:4;4103:55;4154:2;4143:9;4139:18;4131:6;4103:55;:::i;4169:384::-;4380:4;4372:6;4368:17;4357:9;4350:36;4422:2;4417;4406:9;4402:18;4395:30;4331:4;4442:45;4483:2;4472:9;4468:18;4460:6;4442:45;:::i;:::-;4434:53;;4535:10;4527:6;4523:23;4518:2;4507:9;4503:18;4496:51;4169:384;;;;;;:::o;5397:127::-;5458:10;5453:3;5449:20;5446:1;5439:31;5489:4;5486:1;5479:15;5513:4;5510:1;5503:15;5529:127;5590:10;5585:3;5581:20;5578:1;5571:31;5621:4;5618:1;5611:15;5645:4;5642:1;5635:15;5661:201;5699:3;5727:10;5772:2;5765:5;5761:14;5799:2;5790:7;5787:15;5784:41;;;5805:18;;:::i;:::-;5854:1;5841:15;;5661:201;-1:-1:-1;;;5661:201:1:o;5867:135::-;5906:3;-1:-1:-1;;5927:17:1;;5924:43;;;5947:18;;:::i;:::-;-1:-1:-1;5994:1:1;5983:13;;5867:135::o;6007:344::-;6209:2;6191:21;;;6248:2;6228:18;;;6221:30;-1:-1:-1;;;6282:2:1;6267:18;;6260:50;6342:2;6327:18;;6007:344::o;6356:291::-;6533:6;6522:9;6515:25;6576:2;6571;6560:9;6556:18;6549:30;6496:4;6596:45;6637:2;6626:9;6622:18;6614:6;6596:45;:::i;:::-;6588:53;6356:291;-1:-1:-1;;;;6356:291:1:o;6652:380::-;6731:1;6727:12;;;;6774;;;6795:61;;6849:4;6841:6;6837:17;6827:27;;6795:61;6902:2;6894:6;6891:14;6871:18;6868:38;6865:161;;;6948:10;6943:3;6939:20;6936:1;6929:31;6983:4;6980:1;6973:15;7011:4;7008:1;7001:15;6865:161;;6652:380;;;:::o;7443:128::-;7483:3;7514:1;7510:6;7507:1;7504:13;7501:39;;;7520:18;;:::i;:::-;-1:-1:-1;7556:9:1;;7443:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    3891
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB2C2F2E8 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDD631797 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDD631797 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xDE292789 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xDF2D5EC7 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB2C2F2E8 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xC3403DDF EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xD4923D4E EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4ABA5F34 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4ABA5F34 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x5F2BA6B2 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x9297CF8A EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x9C84BB27 EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x38527727 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x462E91EC EQ PUSH2 0x120 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH2 0x13B PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH2 0x10D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x10D PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCB JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1A8 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1FF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x231 JUMPI PUSH2 0x231 PUSH2 0xDFB JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x243 JUMPI PUSH2 0x243 PUSH2 0xDFB JUMP JUMPDEST EQ PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 SWAP2 MLOAD DUP3 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO OR DUP3 SSTORE SWAP2 MLOAD SWAP2 ADD SSTORE PUSH1 0x5 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x318 JUMPI PUSH2 0x318 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH4 0xFFFFFFFF AND SWAP2 PUSH2 0x33C DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x36E SWAP1 PUSH2 0xECE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BB PUSH2 0xDFB JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3CD JUMPI PUSH2 0x3CD PUSH2 0xDFB JUMP JUMPDEST EQ PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP8 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP6 MSTORE DUP4 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 PUSH1 0x3 SWAP1 SWAP7 MUL SWAP6 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP5 AND OR DUP4 SSTORE MLOAD DUP1 MLOAD SWAP4 SWAP5 SWAP3 SWAP4 PUSH2 0x494 SWAP4 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB70 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP2 DUP3 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4C6 DUP4 PUSH2 0xECE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xE83B2A43E7E82D975C8A0A6D2F045153C869E111136A34D1889AB7B598E396A3 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4FC SWAP3 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x570 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x52D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x661 JUMPI PUSH2 0x661 PUSH2 0xDFB JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x673 JUMPI PUSH2 0x673 PUSH2 0xDFB JUMP JUMPDEST EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E2774206F70656E20656C656374696F6E2077697468206E6F2063616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6964617465 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x266 JUMP JUMPDEST PUSH2 0x701 DUP3 TIMESTAMP PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x13FC3791D5AC82EB7988884B4DF9A5475D5E9C8FEF3D981C6D9E46888929FDA7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x75D JUMPI PUSH2 0x75D PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x266 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465206475726174696F6E206E6F7420656E646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xE12E0241ED3B6BB5B8B9E5B0C487661A72158D47E347FA539EF01A1FAFCB3A3D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x55736572204469646E277420766F7465 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x266 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8E2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SWAP1 PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x8FB JUMPI PUSH2 0x8FB PUSH2 0xDFB JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x90D JUMPI PUSH2 0x90D PUSH2 0xDFB JUMP JUMPDEST EQ PUSH2 0x934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x266 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x9BD JUMPI DUP3 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x958 JUMPI PUSH2 0x958 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x98B JUMPI PUSH2 0x98B PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP3 POP SWAP1 POP DUP1 JUMPDEST DUP1 PUSH2 0x9B5 DUP2 PUSH2 0xECE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9D1 JUMPI PUSH2 0x9D1 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0xFF AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xA0B SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA37 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA84 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA84 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA67 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP4 POP POP POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0xAE1 SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB0D SWAP1 PUSH2 0xF38 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB5A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB5A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB3D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH4 0xFFFFFFFF AND DUP4 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xB7C SWAP1 PUSH2 0xF38 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB9E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xBE4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBB7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xBE4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xBE4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xBE4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH2 0xAA4 SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC7F JUMPI PUSH2 0xC7F PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0xC19 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD06 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCEA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 MLOAD AND DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x60 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xD4F PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP5 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDBE JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0xDAC DUP6 DUP4 MLOAD PUSH2 0xD2D JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD90 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xE33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0xFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xE68 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0xEC4 JUMPI PUSH2 0xEC4 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE2 PUSH2 0xE94 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x6F6E6C792061646D696E2066756E6374696F6E73 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xF30 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF4C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF86 JUMPI PUSH2 0xF86 PUSH2 0xE94 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID CALLCODE 0xA7 DIFFICULTY 0xED PUSH5 0x8E8EDE4D82 SLOAD ADDMOD SUB 0x5F 0x4E 0xCD PUSH31 0xB0A5650DBBB4C652AFFD00A040BC64736F6C63430008090033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB2C2F2E8"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD631797"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD631797"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDE292789"
    },
    "71": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDF2D5EC7"
    },
    "82": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA"
    },
    "86": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF851A440"
    },
    "93": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB2C2F2E8"
    },
    "109": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "113": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC3403DDF"
    },
    "120": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "124": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD4923D4E"
    },
    "131": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188"
    },
    "135": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4ABA5F34"
    },
    "147": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "GT",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4ABA5F34"
    },
    "158": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "162": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F2BA6B2"
    },
    "169": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "173": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9297CF8A"
    },
    "180": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "184": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9C84BB27"
    },
    "191": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "195": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x121B93F"
    },
    "207": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x38527727"
    },
    "218": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "222": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x462E91EC"
    },
    "229": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "233": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        3891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "239": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "240": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "243": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "246": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "247": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "249": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "252": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        1550,
        1907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "253": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "254": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "257": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        1550,
        1907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "258": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "STOP",
      "path": "0"
    },
    "260": {
      "offset": [
        201,
        239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "264": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "266": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "267": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "268": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "JUMP",
      "path": "0"
    },
    "269": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "270": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "272": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "273": {
      "op": "SWAP1"
    },
    "274": {
      "op": "DUP2"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "278": {
      "op": "ADD"
    },
    "279": {
      "offset": [
        201,
        239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "282": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "283": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "284": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "285": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "SUB",
      "path": "0"
    },
    "286": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "287": {
      "fn": "Election.vote",
      "offset": [
        201,
        239
      ],
      "op": "RETURN",
      "path": "0"
    },
    "288": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "292": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "295": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "296": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "298": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2F"
    },
    "301": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        3342,
        3661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "302": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x377"
    },
    "306": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        3342,
        3661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "307": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "311": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "314": {
      "fn": "Election.getCandidatesList",
      "jump": "i",
      "offset": [
        2236,
        2344
      ],
      "op": "JUMP",
      "path": "0"
    },
    "315": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "318": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "319": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "322": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "323": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "324": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD69"
    },
    "327": {
      "fn": "Election.getCandidatesList",
      "jump": "i",
      "offset": [
        2236,
        2344
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "332": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "335": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "336": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "338": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "341": {
      "fn": "Election.openVoting",
      "jump": "i",
      "offset": [
        2926,
        3336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "342": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "343": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61D"
    },
    "346": {
      "fn": "Election.openVoting",
      "jump": "i",
      "offset": [
        2926,
        3336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "offset": [
        336,
        367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "Election.openVoting",
      "offset": [
        336,
        367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "351": {
      "fn": "Election.openVoting",
      "offset": [
        336,
        367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "353": {
      "fn": "Election.openVoting",
      "offset": [
        336,
        367
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "354": {
      "fn": "Election.openVoting",
      "offset": [
        336,
        367
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "Election.openVoting",
      "offset": [
        336,
        367
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "offset": [
        245,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "Election.openVoting",
      "offset": [
        245,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "360": {
      "fn": "Election.openVoting",
      "offset": [
        245,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "362": {
      "fn": "Election.openVoting",
      "offset": [
        245,
        282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "363": {
      "fn": "Election.openVoting",
      "offset": [
        245,
        282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "364": {
      "fn": "Election.openVoting",
      "offset": [
        245,
        282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "369": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "372": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "373": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "375": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "378": {
      "fn": "Election.getVoteCount",
      "jump": "i",
      "offset": [
        1913,
        2050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "383": {
      "fn": "Election.getVoteCount",
      "jump": "i",
      "offset": [
        1913,
        2050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "fn": "Election.endVoting",
      "offset": [
        3667,
        3889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "Election.endVoting",
      "offset": [
        3667,
        3889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "388": {
      "fn": "Election.endVoting",
      "offset": [
        3667,
        3889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77D"
    },
    "391": {
      "fn": "Election.endVoting",
      "jump": "i",
      "offset": [
        3667,
        3889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "392": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D"
    },
    "396": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196"
    },
    "399": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "400": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "402": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDCB"
    },
    "405": {
      "fn": "Election.getUserVote",
      "jump": "i",
      "offset": [
        2056,
        2230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "406": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "407": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83B"
    },
    "410": {
      "fn": "Election.getUserVote",
      "jump": "i",
      "offset": [
        2056,
        2230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "411": {
      "offset": [
        289,
        330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "412": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "414": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "415": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8"
    },
    "418": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "419": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "421": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "AND",
      "path": "0"
    },
    "422": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "423": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "JUMP",
      "path": "0"
    },
    "424": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "425": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "427": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "428": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "431": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "432": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "433": {
      "fn": "Election.getUserVote",
      "offset": [
        289,
        330
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE11"
    },
    "436": {
      "fn": "Election.getUserVote",
      "jump": "i",
      "offset": [
        289,
        330
      ],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD"
    },
    "441": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B5"
    },
    "444": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2350,
        2821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "445": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "446": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "448": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "449": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "452": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "453": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "454": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE39"
    },
    "457": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2350,
        2821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "458": {
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "459": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD"
    },
    "462": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8"
    },
    "465": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "466": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "468": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "471": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        627,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "472": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "473": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA8"
    },
    "476": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        627,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "477": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "478": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "480": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "481": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "484": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "485": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "486": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "487": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "488": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4C"
    },
    "491": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        627,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "offset": [
        175,
        195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "495": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "496": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "499": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "506": {
      "op": "SHL"
    },
    "507": {
      "op": "SUB"
    },
    "508": {
      "offset": [
        175,
        195
      ],
      "op": "AND",
      "path": "0"
    },
    "509": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "DUP2",
      "path": "0"
    },
    "510": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "JUMP",
      "path": "0"
    },
    "511": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "514": {
      "fn": "Election.getResult",
      "offset": [
        175,
        195
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "521": {
      "op": "SHL"
    },
    "522": {
      "op": "SUB"
    },
    "523": {
      "op": "SWAP1"
    },
    "524": {
      "op": "SWAP2"
    },
    "525": {
      "op": "AND"
    },
    "526": {
      "op": "DUP2"
    },
    "527": {
      "op": "MSTORE"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "offset": [
        175,
        195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "534": {
      "op": "JUMP"
    },
    "535": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "536": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "538": {
      "fn": "Election.vote",
      "offset": [
        1201,
        1221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "539": {
      "fn": "Election.vote",
      "offset": [
        1625,
        1643
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "541": {
      "fn": "Election.vote",
      "offset": [
        1625,
        1643
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "542": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "544": {
      "fn": "Election.vote",
      "offset": [
        1201,
        1221
      ],
      "op": "AND",
      "path": "0"
    },
    "545": {
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "547": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "549": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "550": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x231"
    },
    "553": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "554": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x231"
    },
    "557": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "560": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "561": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "562": {
      "offset": [
        1191,
        1197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "563": {
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "565": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "566": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "567": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "568": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "571": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "572": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "575": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "578": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "579": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "Election.vote",
      "offset": [
        1191,
        1221
      ],
      "op": "EQ",
      "path": "0"
    },
    "581": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26F"
    },
    "584": {
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "585": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "587": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "offset": [
        1183,
        1226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "596": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "599": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "601": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "DUP3",
      "path": "0"
    },
    "602": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "ADD",
      "path": "0"
    },
    "603": {
      "op": "MSTORE"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "608": {
      "op": "DUP3"
    },
    "609": {
      "op": "ADD"
    },
    "610": {
      "op": "MSTORE"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "613": {
      "op": "ADD"
    },
    "614": {
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "615": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "617": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "618": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "620": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "SUB",
      "path": "0"
    },
    "621": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "622": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "623": {
      "fn": "Election.vote",
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "624": {
      "fn": "Election.vote",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "626": {
      "fn": "Election.vote",
      "offset": [
        1682,
        1700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "627": {
      "fn": "Election.vote",
      "offset": [
        1667,
        1679
      ],
      "op": "DUP3",
      "path": "0"
    },
    "628": {
      "branch": 23,
      "fn": "Election.vote",
      "offset": [
        1667,
        1700
      ],
      "op": "LT",
      "path": "0"
    },
    "629": {
      "fn": "Election.vote",
      "offset": [
        1659,
        1701
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27D"
    },
    "632": {
      "branch": 23,
      "fn": "Election.vote",
      "offset": [
        1659,
        1701
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "633": {
      "fn": "Election.vote",
      "offset": [
        1659,
        1701
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "635": {
      "fn": "Election.vote",
      "offset": [
        1659,
        1701
      ],
      "op": "DUP1",
      "path": "0"
    },
    "636": {
      "fn": "Election.vote",
      "offset": [
        1659,
        1701
      ],
      "op": "REVERT",
      "path": "0"
    },
    "637": {
      "fn": "Election.vote",
      "offset": [
        1659,
        1701
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "638": {
      "fn": "Election.vote",
      "offset": [
        1726,
        1736
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "639": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "641": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "642": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "643": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "644": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "646": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "648": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "649": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "651": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "652": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1737
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "653": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "654": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "656": {
      "fn": "Election.vote",
      "offset": [
        1720,
        1746
      ],
      "op": "AND",
      "path": "0"
    },
    "657": {
      "branch": 24,
      "fn": "Election.vote",
      "offset": [
        1719,
        1746
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "658": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CD"
    },
    "661": {
      "branch": 24,
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "662": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "664": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "665": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "669": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "671": {
      "op": "SHL"
    },
    "672": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "673": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "676": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "678": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "DUP3",
      "path": "0"
    },
    "679": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "op": "MSTORE"
    },
    "681": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "685": {
      "op": "DUP3"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "op": "MSTORE"
    },
    "688": {
      "op": "PUSH13",
      "value": "0x105B1C9958591E481D9BDD1959"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "707": {
      "op": "DUP3"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "716": {
      "op": "JUMP"
    },
    "717": {
      "fn": "Election.vote",
      "offset": [
        1711,
        1764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "718": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "720": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "721": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "722": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "723": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP3",
      "path": "0"
    },
    "724": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "ADD",
      "path": "0"
    },
    "725": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP3",
      "path": "0"
    },
    "726": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "727": {
      "fn": "Election.vote",
      "offset": [
        1799,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "729": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "730": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP3",
      "path": "0"
    },
    "731": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "732": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "734": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "735": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP4",
      "path": "0"
    },
    "736": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "ADD",
      "path": "0"
    },
    "737": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP7",
      "path": "0"
    },
    "738": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP2",
      "path": "0"
    },
    "739": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "740": {
      "fn": "Election.vote",
      "offset": [
        1780,
        1790
      ],
      "op": "CALLER",
      "path": "0"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "743": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "744": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "745": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "746": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "748": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "750": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "751": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "752": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "753": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1791
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "754": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "755": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "756": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "DUP3",
      "path": "0"
    },
    "757": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "760": {
      "op": "NOT"
    },
    "761": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "AND",
      "path": "0"
    },
    "762": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "763": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "764": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "765": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "OR",
      "path": "0"
    },
    "766": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "DUP3",
      "path": "0"
    },
    "767": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "768": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "769": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "770": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "771": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "ADD",
      "path": "0"
    },
    "772": {
      "fn": "Election.vote",
      "offset": [
        1774,
        1818
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "773": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1842
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x5"
    },
    "775": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "776": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "777": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP4",
      "path": "0"
    },
    "778": {
      "fn": "Election.vote",
      "offset": [
        1794,
        1818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "779": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "780": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "LT",
      "path": "0"
    },
    "781": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x318"
    },
    "784": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "785": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x318"
    },
    "788": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7E"
    },
    "791": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        1828,
        1856
      ],
      "op": "JUMP",
      "path": "0"
    },
    "792": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "793": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "795": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "796": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "DUP3",
      "path": "0"
    },
    "797": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "798": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "800": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "DUP3",
      "path": "0"
    },
    "801": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "802": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "804": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "806": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "807": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "808": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "MUL",
      "path": "0"
    },
    "809": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1856
      ],
      "op": "ADD",
      "path": "0"
    },
    "810": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1867
      ],
      "op": "ADD",
      "path": "0"
    },
    "811": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "DUP1",
      "path": "0"
    },
    "812": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "813": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "818": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "AND",
      "path": "0"
    },
    "819": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "820": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33C"
    },
    "823": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "824": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEAA"
    },
    "827": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        1828,
        1869
      ],
      "op": "JUMP",
      "path": "0"
    },
    "828": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "829": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "830": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "831": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "834": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "EXP",
      "path": "0"
    },
    "835": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "DUP2",
      "path": "0"
    },
    "836": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "837": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "DUP2",
      "path": "0"
    },
    "838": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "843": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "MUL",
      "path": "0"
    },
    "844": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "NOT",
      "path": "0"
    },
    "845": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "AND",
      "path": "0"
    },
    "846": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "847": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "848": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "853": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "AND",
      "path": "0"
    },
    "854": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "MUL",
      "path": "0"
    },
    "855": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "OR",
      "path": "0"
    },
    "856": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "857": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "858": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "POP",
      "path": "0"
    },
    "859": {
      "fn": "Election.vote",
      "offset": [
        1828,
        1869
      ],
      "op": "POP",
      "path": "0"
    },
    "860": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1898
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "862": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "864": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "DUP2",
      "path": "0"
    },
    "865": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "866": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "867": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "868": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "869": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36E"
    },
    "873": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "874": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECE"
    },
    "877": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        1879,
        1900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "878": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "879": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "880": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "POP",
      "path": "0"
    },
    "882": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "883": {
      "fn": "Election.vote",
      "offset": [
        1879,
        1900
      ],
      "op": "POP",
      "path": "0"
    },
    "884": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "POP",
      "path": "0"
    },
    "885": {
      "fn": "Election.vote",
      "offset": [
        1550,
        1907
      ],
      "op": "POP",
      "path": "0"
    },
    "886": {
      "fn": "Election.vote",
      "jump": "o",
      "offset": [
        1550,
        1907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "887": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "888": {
      "offset": [
        1072,
        1077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "890": {
      "fn": "Election.addCandidate",
      "offset": [
        1072,
        1077
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "op": "SUB"
    },
    "899": {
      "offset": [
        1072,
        1077
      ],
      "op": "AND",
      "path": "0"
    },
    "900": {
      "offset": [
        1058,
        1068
      ],
      "op": "CALLER",
      "path": "0"
    },
    "901": {
      "offset": [
        1058,
        1077
      ],
      "op": "EQ",
      "path": "0"
    },
    "902": {
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A1"
    },
    "905": {
      "offset": [
        1050,
        1102
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "906": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "908": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "offset": [
        1050,
        1102
      ],
      "op": "DUP2",
      "path": "0"
    },
    "917": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "918": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "920": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "ADD",
      "path": "0"
    },
    "921": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "924": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "925": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE9"
    },
    "928": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        1050,
        1102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "929": {
      "fn": "Election.addCandidate",
      "offset": [
        1050,
        1102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "930": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "932": {
      "fn": "Election.addCandidate",
      "offset": [
        1201,
        1221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "933": {
      "fn": "Election.addCandidate",
      "offset": [
        3442,
        3466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "935": {
      "fn": "Election.addCandidate",
      "offset": [
        3442,
        3466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "938": {
      "fn": "Election.addCandidate",
      "offset": [
        1201,
        1221
      ],
      "op": "AND",
      "path": "0"
    },
    "939": {
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "941": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "942": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "943": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "944": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BB"
    },
    "947": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "948": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BB"
    },
    "951": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "954": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "955": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "956": {
      "offset": [
        1191,
        1197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "957": {
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "959": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "960": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "961": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "962": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD"
    },
    "965": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "966": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD"
    },
    "969": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "972": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "973": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "974": {
      "fn": "Election.addCandidate",
      "offset": [
        1191,
        1221
      ],
      "op": "EQ",
      "path": "0"
    },
    "975": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F4"
    },
    "978": {
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "979": {
      "fn": "Election.addCandidate",
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "981": {
      "fn": "Election.addCandidate",
      "offset": [
        1183,
        1226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "offset": [
        1183,
        1226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "990": {
      "fn": "Election.addCandidate",
      "offset": [
        1183,
        1226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "993": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "995": {
      "fn": "Election.addCandidate",
      "offset": [
        1183,
        1226
      ],
      "op": "DUP3",
      "path": "0"
    },
    "996": {
      "fn": "Election.addCandidate",
      "offset": [
        1183,
        1226
      ],
      "op": "ADD",
      "path": "0"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1002": {
      "op": "DUP3"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "1011": {
      "op": "JUMP"
    },
    "1012": {
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1013": {
      "fn": "Election.addCandidate",
      "offset": [
        3498,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1015": {
      "fn": "Election.addCandidate",
      "offset": [
        3498,
        3516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1016": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "1018": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1019": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1020": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1022": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1023": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "1024": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1025": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1026": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1028": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1029": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1030": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "AND",
      "path": "0"
    },
    "1031": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1032": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1033": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1035": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1036": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1037": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "1038": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1039": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1040": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1043": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1044": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1045": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "ADD",
      "path": "0"
    },
    "1046": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1047": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1049": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1051": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1052": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1053": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1055": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1056": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1058": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1059": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1060": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1061": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1062": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1063": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1096": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1098": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1100": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "MUL",
      "path": "0"
    },
    "1101": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1102": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1103": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "ADD",
      "path": "0"
    },
    "1104": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1105": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1108": {
      "op": "NOT"
    },
    "1109": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "AND",
      "path": "0"
    },
    "1110": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1111": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1112": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1113": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "AND",
      "path": "0"
    },
    "1114": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "OR",
      "path": "0"
    },
    "1115": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1116": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1117": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1118": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1119": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1120": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1121": {
      "fn": "Election.addCandidate",
      "offset": [
        3546,
        3579
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1122": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1123": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1124": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x494"
    },
    "1127": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1128": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
    },
    "1161": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "ADD",
      "path": "0"
    },
    "1162": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1163": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1164": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1165": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1166": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "ADD",
      "path": "0"
    },
    "1167": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1168": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB70"
    },
    "1171": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        3526,
        3580
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1172": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1176": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1177": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1178": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1179": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "ADD",
      "path": "0"
    },
    "1180": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1181": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1183": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1184": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1185": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "ADD",
      "path": "0"
    },
    "1186": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1188": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1193": {
      "op": "NOT"
    },
    "1194": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "AND",
      "path": "0"
    },
    "1195": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1200": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1201": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1202": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "AND",
      "path": "0"
    },
    "1203": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1204": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1205": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1206": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "OR",
      "path": "0"
    },
    "1207": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1208": {
      "fn": "Election.addCandidate",
      "offset": [
        3526,
        3580
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1209": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 6
    },
    "1210": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1211": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1214": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C6"
    },
    "1217": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1218": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECE"
    },
    "1221": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        3590,
        3610
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1222": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1223": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1224": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1225": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "POP",
      "path": "0"
    },
    "1226": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1227": {
      "fn": "Election.addCandidate",
      "offset": [
        3590,
        3610
      ],
      "op": "POP",
      "path": "0"
    },
    "1228": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 7,
      "value": "0xE83B2A43E7E82D975C8A0A6D2F045153C869E111136A34D1889AB7B598E396A3"
    },
    "1261": {
      "fn": "Election.addCandidate",
      "offset": [
        3641,
        3646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1262": {
      "fn": "Election.addCandidate",
      "offset": [
        3648,
        3653
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1263": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1265": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1266": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FC"
    },
    "1269": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1270": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1271": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF17"
    },
    "1275": {
      "fn": "Election.addCandidate",
      "jump": "i",
      "offset": [
        3626,
        3654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1276": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1277": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1279": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1280": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1281": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1282": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "SUB",
      "path": "0"
    },
    "1283": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1284": {
      "fn": "Election.addCandidate",
      "offset": [
        3626,
        3654
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1285": {
      "fn": "Election.addCandidate",
      "offset": [
        3472,
        3661
      ],
      "op": "POP",
      "path": "0"
    },
    "1286": {
      "offset": [
        1112,
        1113
      ],
      "op": "POP",
      "path": "0"
    },
    "1287": {
      "fn": "Election.addCandidate",
      "offset": [
        3342,
        3661
      ],
      "op": "POP",
      "path": "0"
    },
    "1288": {
      "fn": "Election.addCandidate",
      "jump": "o",
      "offset": [
        3342,
        3661
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1289": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1290": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2286,
        2304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1292": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2323,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x5"
    },
    "1294": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1295": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1296": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1297": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1299": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MUL",
      "path": "0"
    },
    "1300": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1302": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1303": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1305": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1306": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1307": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1308": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1309": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1311": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1312": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1313": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1314": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1315": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1316": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1318": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1319": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1321": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1322": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1324": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1325": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1326": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1327": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1328": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "LT",
      "path": "0"
    },
    "1329": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1330": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "1333": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1334": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1336": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1337": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1338": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1339": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1341": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1342": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1343": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1344": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1345": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1347": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1348": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1349": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1351": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1352": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1353": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1354": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1355": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1356": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1358": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1359": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MUL",
      "path": "0"
    },
    "1360": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1361": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1362": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1363": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1364": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1365": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1367": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "AND",
      "path": "0"
    },
    "1368": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1369": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1370": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1372": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1373": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1374": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1375": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1376": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1377": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1378": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1379": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1380": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1381": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1382": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1383": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1384": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x570"
    },
    "1387": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1388": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF38"
    },
    "1391": {
      "fn": "Election.getCandidatesList",
      "jump": "i",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1392": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1393": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1394": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1396": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1397": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1399": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1400": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1401": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DIV",
      "path": "0"
    },
    "1402": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MUL",
      "path": "0"
    },
    "1403": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1405": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1406": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1408": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1409": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1411": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1412": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1414": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1415": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1416": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1417": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1418": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1419": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1420": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1421": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1422": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1424": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1425": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1426": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1427": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1428": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59C"
    },
    "1431": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1432": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF38"
    },
    "1435": {
      "fn": "Election.getCandidatesList",
      "jump": "i",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1436": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1437": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1438": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1439": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E9"
    },
    "1442": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1443": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1444": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1446": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "LT",
      "path": "0"
    },
    "1447": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BE"
    },
    "1450": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1451": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1454": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1455": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1456": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1457": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DIV",
      "path": "0"
    },
    "1458": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MUL",
      "path": "0"
    },
    "1459": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1460": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1461": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1462": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1464": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1465": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1466": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E9"
    },
    "1469": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1470": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1471": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1472": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1473": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1474": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1475": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1477": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1478": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1480": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1482": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1483": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1484": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1485": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1486": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1487": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1488": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1489": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1490": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1492": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1493": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1494": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1496": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1497": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1498": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1499": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "GT",
      "path": "0"
    },
    "1500": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CC"
    },
    "1503": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1504": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1505": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SUB",
      "path": "0"
    },
    "1507": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1509": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "AND",
      "path": "0"
    },
    "1510": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1511": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1512": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1513": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "POP"
    },
    "1517": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1518": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1519": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1524": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1525": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1526": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1527": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1528": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1529": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1534": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "AND",
      "path": "0"
    },
    "1535": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1537": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1538": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1539": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1540": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1541": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1542": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1543": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1544": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1546": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1547": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1548": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1549": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1550": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1551": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1552": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "1555": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1556": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1557": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "POP",
      "path": "0"
    },
    "1558": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "POP",
      "path": "0"
    },
    "1559": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "POP",
      "path": "0"
    },
    "1560": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "POP",
      "path": "0"
    },
    "1561": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1562": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2316,
        2337
      ],
      "op": "POP",
      "path": "0"
    },
    "1563": {
      "fn": "Election.getCandidatesList",
      "offset": [
        2236,
        2344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1564": {
      "fn": "Election.getCandidatesList",
      "jump": "o",
      "offset": [
        2236,
        2344
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1565": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1566": {
      "offset": [
        1072,
        1077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1568": {
      "fn": "Election.openVoting",
      "offset": [
        1072,
        1077
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "SUB"
    },
    "1577": {
      "offset": [
        1072,
        1077
      ],
      "op": "AND",
      "path": "0"
    },
    "1578": {
      "offset": [
        1058,
        1068
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1579": {
      "offset": [
        1058,
        1077
      ],
      "op": "EQ",
      "path": "0"
    },
    "1580": {
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x647"
    },
    "1583": {
      "offset": [
        1050,
        1102
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1584": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1586": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "offset": [
        1050,
        1102
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1595": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1596": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1598": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "ADD",
      "path": "0"
    },
    "1599": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "1602": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1603": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE9"
    },
    "1606": {
      "fn": "Election.openVoting",
      "jump": "i",
      "offset": [
        1050,
        1102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1607": {
      "fn": "Election.openVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1608": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1610": {
      "fn": "Election.openVoting",
      "offset": [
        1201,
        1221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1611": {
      "fn": "Election.openVoting",
      "offset": [
        3026,
        3050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1613": {
      "fn": "Election.openVoting",
      "offset": [
        3026,
        3050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1616": {
      "fn": "Election.openVoting",
      "offset": [
        1201,
        1221
      ],
      "op": "AND",
      "path": "0"
    },
    "1617": {
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1619": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1620": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "1621": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1622": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x661"
    },
    "1625": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1626": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x661"
    },
    "1629": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "1632": {
      "fn": "Election.openVoting",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1633": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1634": {
      "offset": [
        1191,
        1197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1635": {
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1637": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1638": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "1639": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1640": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x673"
    },
    "1643": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1644": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x673"
    },
    "1647": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "1650": {
      "fn": "Election.openVoting",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1651": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1652": {
      "fn": "Election.openVoting",
      "offset": [
        1191,
        1221
      ],
      "op": "EQ",
      "path": "0"
    },
    "1653": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69A"
    },
    "1656": {
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1657": {
      "fn": "Election.openVoting",
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1659": {
      "fn": "Election.openVoting",
      "offset": [
        1183,
        1226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "offset": [
        1183,
        1226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1668": {
      "fn": "Election.openVoting",
      "offset": [
        1183,
        1226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1671": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1673": {
      "fn": "Election.openVoting",
      "offset": [
        1183,
        1226
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1674": {
      "fn": "Election.openVoting",
      "offset": [
        1183,
        1226
      ],
      "op": "ADD",
      "path": "0"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1680": {
      "op": "DUP3"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1685": {
      "op": "ADD"
    },
    "1686": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "1689": {
      "op": "JUMP"
    },
    "1690": {
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1691": {
      "fn": "Election.openVoting",
      "offset": [
        3087,
        3101
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x5"
    },
    "1693": {
      "fn": "Election.openVoting",
      "offset": [
        3087,
        3108
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1694": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F7"
    },
    "1697": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1698": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1700": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1707": {
      "op": "SHL"
    },
    "1708": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1709": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1712": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1714": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1715": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "ADD",
      "path": "0"
    },
    "1716": {
      "op": "MSTORE"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1721": {
      "op": "DUP3"
    },
    "1722": {
      "op": "ADD"
    },
    "1723": {
      "op": "MSTORE"
    },
    "1724": {
      "op": "PUSH32",
      "value": "0x43616E2774206F70656E20656C656374696F6E2077697468206E6F2063616E64"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1759": {
      "op": "DUP3"
    },
    "1760": {
      "op": "ADD"
    },
    "1761": {
      "op": "MSTORE"
    },
    "1762": {
      "op": "PUSH5",
      "value": "0x6964617465"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1773": {
      "op": "DUP3"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1778": {
      "op": "ADD"
    },
    "1779": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "1782": {
      "op": "JUMP"
    },
    "1783": {
      "fn": "Election.openVoting",
      "offset": [
        3066,
        3175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1784": {
      "fn": "Election.openVoting",
      "offset": [
        3204,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x701"
    },
    "1787": {
      "fn": "Election.openVoting",
      "offset": [
        3222,
        3235
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1788": {
      "fn": "Election.openVoting",
      "offset": [
        3204,
        3219
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1789": {
      "fn": "Election.openVoting",
      "offset": [
        3204,
        3235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF73"
    },
    "1792": {
      "fn": "Election.openVoting",
      "jump": "i",
      "offset": [
        3204,
        3235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1793": {
      "fn": "Election.openVoting",
      "offset": [
        3204,
        3235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1794": {
      "fn": "Election.openVoting",
      "offset": [
        3185,
        3201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1796": {
      "fn": "Election.openVoting",
      "offset": [
        3185,
        3235
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1797": {
      "fn": "Election.openVoting",
      "offset": [
        3245,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x3"
    },
    "1799": {
      "fn": "Election.openVoting",
      "offset": [
        3245,
        3286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1800": {
      "fn": "Election.openVoting",
      "offset": [
        3245,
        3286
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1803": {
      "op": "NOT"
    },
    "1804": {
      "fn": "Election.openVoting",
      "offset": [
        3245,
        3286
      ],
      "op": "AND",
      "path": "0"
    },
    "1805": {
      "fn": "Election.openVoting",
      "offset": [
        3268,
        3286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1807": {
      "fn": "Election.openVoting",
      "offset": [
        3245,
        3286
      ],
      "op": "OR",
      "path": "0"
    },
    "1808": {
      "fn": "Election.openVoting",
      "offset": [
        3245,
        3286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1809": {
      "fn": "Election.openVoting",
      "offset": [
        3245,
        3286
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1810": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x40"
    },
    "1812": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1813": {
      "fn": "Election.openVoting",
      "offset": [
        3313,
        3328
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1814": {
      "op": "DUP2"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x13FC3791D5AC82EB7988884B4DF9A5475D5E9C8FEF3D981C6D9E46888929FDA7"
    },
    "1849": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1855": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1856": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1857": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1858": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "SUB",
      "path": "0"
    },
    "1859": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1860": {
      "fn": "Election.openVoting",
      "offset": [
        3302,
        3329
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1861": {
      "offset": [
        1112,
        1113
      ],
      "op": "POP",
      "path": "0"
    },
    "1862": {
      "fn": "Election.openVoting",
      "offset": [
        2926,
        3336
      ],
      "op": "POP",
      "path": "0"
    },
    "1863": {
      "fn": "Election.openVoting",
      "jump": "o",
      "offset": [
        2926,
        3336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1864": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1865": {
      "fn": "Election.getVoteCount",
      "offset": [
        1978,
        1985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1867": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2018
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x5"
    },
    "1869": {
      "fn": "Election.getVoteCount",
      "offset": [
        2019,
        2031
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1870": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1871": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1872": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1873": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "LT",
      "path": "0"
    },
    "1874": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75D"
    },
    "1877": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1878": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75D"
    },
    "1881": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7E"
    },
    "1884": {
      "fn": "Election.getVoteCount",
      "jump": "i",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1885": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1886": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1888": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1889": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1890": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1891": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1893": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1894": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1895": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1896": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1898": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1900": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1901": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1902": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "MUL",
      "path": "0"
    },
    "1903": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2032
      ],
      "op": "ADD",
      "path": "0"
    },
    "1904": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2043
      ],
      "op": "ADD",
      "path": "0"
    },
    "1905": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2043
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1906": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2043
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1911": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2043
      ],
      "op": "AND",
      "path": "0"
    },
    "1912": {
      "fn": "Election.getVoteCount",
      "offset": [
        2004,
        2043
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1913": {
      "fn": "Election.getVoteCount",
      "offset": [
        1913,
        2050
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "fn": "Election.getVoteCount",
      "jump": "o",
      "offset": [
        1913,
        2050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1917": {
      "fn": "Election.endVoting",
      "offset": [
        3667,
        3889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1918": {
      "offset": [
        1072,
        1077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1920": {
      "fn": "Election.endVoting",
      "offset": [
        1072,
        1077
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1927": {
      "op": "SHL"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "offset": [
        1072,
        1077
      ],
      "op": "AND",
      "path": "0"
    },
    "1930": {
      "offset": [
        1058,
        1068
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1931": {
      "offset": [
        1058,
        1077
      ],
      "op": "EQ",
      "path": "0"
    },
    "1932": {
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A7"
    },
    "1935": {
      "offset": [
        1050,
        1102
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1936": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1938": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1945": {
      "op": "SHL"
    },
    "1946": {
      "offset": [
        1050,
        1102
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1947": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1948": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1950": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "ADD",
      "path": "0"
    },
    "1951": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "1954": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1955": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE9"
    },
    "1958": {
      "fn": "Election.endVoting",
      "jump": "i",
      "offset": [
        1050,
        1102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1959": {
      "fn": "Election.endVoting",
      "offset": [
        1050,
        1102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1960": {
      "fn": "Election.endVoting",
      "offset": [
        3744,
        3760
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x4"
    },
    "1962": {
      "fn": "Election.endVoting",
      "offset": [
        3744,
        3760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1963": {
      "fn": "Election.endVoting",
      "offset": [
        3725,
        3740
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1964": {
      "fn": "Election.endVoting",
      "offset": [
        3725,
        3760
      ],
      "op": "LT",
      "path": "0"
    },
    "1965": {
      "branch": 25,
      "fn": "Election.endVoting",
      "offset": [
        3725,
        3760
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1966": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "1969": {
      "branch": 25,
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1970": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1972": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1979": {
      "op": "SHL"
    },
    "1980": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1981": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1984": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1986": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1987": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "ADD",
      "path": "0"
    },
    "1988": {
      "op": "MSTORE"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1993": {
      "op": "DUP3"
    },
    "1994": {
      "op": "ADD"
    },
    "1995": {
      "op": "MSTORE"
    },
    "1996": {
      "op": "PUSH32",
      "value": "0x566F7465206475726174696F6E206E6F7420656E646564000000000000000000"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2031": {
      "op": "DUP3"
    },
    "2032": {
      "op": "ADD"
    },
    "2033": {
      "op": "MSTORE"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "2040": {
      "op": "JUMP"
    },
    "2041": {
      "fn": "Election.endVoting",
      "offset": [
        3717,
        3788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2042": {
      "fn": "Election.endVoting",
      "offset": [
        3798,
        3818
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x3"
    },
    "2044": {
      "fn": "Election.endVoting",
      "offset": [
        3798,
        3840
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2045": {
      "fn": "Election.endVoting",
      "offset": [
        3798,
        3840
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2048": {
      "op": "NOT"
    },
    "2049": {
      "fn": "Election.endVoting",
      "offset": [
        3798,
        3840
      ],
      "op": "AND",
      "path": "0"
    },
    "2050": {
      "fn": "Election.endVoting",
      "offset": [
        3821,
        3840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2052": {
      "fn": "Election.endVoting",
      "offset": [
        3798,
        3840
      ],
      "op": "OR",
      "path": "0"
    },
    "2053": {
      "fn": "Election.endVoting",
      "offset": [
        3798,
        3840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2054": {
      "fn": "Election.endVoting",
      "offset": [
        3798,
        3840
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2055": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x40"
    },
    "2057": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2058": {
      "fn": "Election.endVoting",
      "offset": [
        3866,
        3881
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2059": {
      "op": "DUP2"
    },
    "2060": {
      "op": "MSTORE"
    },
    "2061": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xE12E0241ED3B6BB5B8B9E5B0C487661A72158D47E347FA539EF01A1FAFCB3A3D"
    },
    "2094": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2100": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2101": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2102": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2103": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "SUB",
      "path": "0"
    },
    "2104": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2105": {
      "fn": "Election.endVoting",
      "offset": [
        3856,
        3882
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2106": {
      "fn": "Election.endVoting",
      "jump": "o",
      "offset": [
        3667,
        3889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2107": {
      "fn": "Election.getUserVote",
      "offset": [
        2056,
        2230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "op": "SUB"
    },
    "2116": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 17
    },
    "2117": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "AND",
      "path": "0"
    },
    "2118": {
      "fn": "Election.getUserVote",
      "offset": [
        2113,
        2120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2120": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2121": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2122": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2123": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2125": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2127": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2128": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2130": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2131": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2152
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2132": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2161
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2133": {
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2135": {
      "branch": 26,
      "fn": "Election.getUserVote",
      "offset": [
        2140,
        2161
      ],
      "op": "AND",
      "path": "0"
    },
    "2136": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x896"
    },
    "2139": {
      "branch": 26,
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2140": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2142": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2149": {
      "op": "SHL"
    },
    "2150": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2151": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2154": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2156": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2157": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "ADD",
      "path": "0"
    },
    "2158": {
      "op": "MSTORE"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2163": {
      "op": "DUP3"
    },
    "2164": {
      "op": "ADD"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "PUSH16",
      "value": "0x55736572204469646E277420766F7465"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "MSTORE"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2193": {
      "op": "ADD"
    },
    "2194": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "2197": {
      "op": "JUMP"
    },
    "2198": {
      "fn": "Election.getUserVote",
      "offset": [
        2132,
        2182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2199": {
      "op": "POP"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "AND",
      "path": "0",
      "statement": 18
    },
    "2209": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2211": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2212": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2213": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2214": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2216": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2218": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2219": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2221": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2222": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2211
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2223": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2225": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2223
      ],
      "op": "ADD",
      "path": "0"
    },
    "2226": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2223
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2227": {
      "fn": "Election.getUserVote",
      "offset": [
        2199,
        2223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2228": {
      "fn": "Election.getUserVote",
      "jump": "o",
      "offset": [
        2056,
        2230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2229": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2230": {
      "fn": "Election.getResult",
      "offset": [
        2461,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E2"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2235": {
      "op": "MLOAD"
    },
    "2236": {
      "op": "DUP1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2239": {
      "op": "ADD"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "op": "DUP1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2248": {
      "op": "AND"
    },
    "2249": {
      "op": "DUP2"
    },
    "2250": {
      "op": "MSTORE"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2253": {
      "op": "ADD"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2256": {
      "op": "DUP2"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2260": {
      "op": "ADD"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2263": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2268": {
      "op": "AND"
    },
    "2269": {
      "op": "DUP2"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "op": "POP"
    },
    "2272": {
      "op": "SWAP1"
    },
    "2273": {
      "op": "JUMP"
    },
    "2274": {
      "fn": "Election.getResult",
      "offset": [
        2461,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2275": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2277": {
      "fn": "Election.getResult",
      "offset": [
        1201,
        1221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2278": {
      "fn": "Election.getResult",
      "offset": [
        2423,
        2442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2280": {
      "fn": "Election.getResult",
      "offset": [
        2423,
        2442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2281": {
      "offset": [
        1201,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2283": {
      "fn": "Election.getResult",
      "offset": [
        1201,
        1221
      ],
      "op": "AND",
      "path": "0"
    },
    "2284": {
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2285": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2286": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "2287": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2288": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FB"
    },
    "2291": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2292": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FB"
    },
    "2295": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "2298": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2299": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2300": {
      "offset": [
        1191,
        1197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2301": {
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2303": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2304": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "GT",
      "path": "0"
    },
    "2305": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2306": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90D"
    },
    "2309": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2310": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90D"
    },
    "2313": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "2316": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2317": {
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2318": {
      "branch": 27,
      "fn": "Election.getResult",
      "offset": [
        1191,
        1221
      ],
      "op": "EQ",
      "path": "0"
    },
    "2319": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x934"
    },
    "2322": {
      "branch": 27,
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2323": {
      "fn": "Election.getResult",
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2325": {
      "fn": "Election.getResult",
      "offset": [
        1183,
        1226
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2332": {
      "op": "SHL"
    },
    "2333": {
      "offset": [
        1183,
        1226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2334": {
      "fn": "Election.getResult",
      "offset": [
        1183,
        1226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2337": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2339": {
      "fn": "Election.getResult",
      "offset": [
        1183,
        1226
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2340": {
      "fn": "Election.getResult",
      "offset": [
        1183,
        1226
      ],
      "op": "ADD",
      "path": "0"
    },
    "2341": {
      "op": "MSTORE"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2346": {
      "op": "DUP3"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "MSTORE"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "offset": [
        1183,
        1226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "2355": {
      "op": "JUMP"
    },
    "2356": {
      "offset": [
        1183,
        1226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2357": {
      "fn": "Election.getResult",
      "offset": [
        2493,
        2509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2359": {
      "fn": "Election.getResult",
      "offset": [
        2523,
        2539
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2360": {
      "fn": "Election.getResult",
      "offset": [
        2559,
        2568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2362": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2363": {
      "fn": "Election.getResult",
      "offset": [
        2578,
        2596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2365": {
      "fn": "Election.getResult",
      "offset": [
        2578,
        2596
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2366": {
      "fn": "Election.getResult",
      "offset": [
        2574,
        2575
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2367": {
      "fn": "Election.getResult",
      "offset": [
        2574,
        2596
      ],
      "op": "LT",
      "path": "0"
    },
    "2368": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2369": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BD"
    },
    "2372": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2373": {
      "fn": "Election.getResult",
      "offset": [
        2652,
        2660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2374": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2635
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2376": {
      "fn": "Election.getResult",
      "offset": [
        2636,
        2637
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2377": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2378": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2379": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2380": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "LT",
      "path": "0"
    },
    "2381": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x958"
    },
    "2384": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2385": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x958"
    },
    "2388": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7E"
    },
    "2391": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2621,
        2638
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2392": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2393": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2395": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2396": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2397": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2398": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2400": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2401": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2402": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2403": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2405": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2407": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2408": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2409": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "MUL",
      "path": "0"
    },
    "2410": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2638
      ],
      "op": "ADD",
      "path": "0"
    },
    "2411": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2649
      ],
      "op": "ADD",
      "path": "0"
    },
    "2412": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2413": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2649
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2418": {
      "fn": "Election.getResult",
      "offset": [
        2621,
        2649
      ],
      "op": "AND",
      "path": "0"
    },
    "2419": {
      "branch": 28,
      "fn": "Election.getResult",
      "offset": [
        2621,
        2660
      ],
      "op": "GT",
      "path": "0"
    },
    "2420": {
      "fn": "Election.getResult",
      "offset": [
        2617,
        2764
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2421": {
      "fn": "Election.getResult",
      "offset": [
        2617,
        2764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AB"
    },
    "2424": {
      "branch": 28,
      "fn": "Election.getResult",
      "offset": [
        2617,
        2764
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2425": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2705
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x5"
    },
    "2427": {
      "fn": "Election.getResult",
      "offset": [
        2706,
        2707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2428": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2429": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2430": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2431": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "LT",
      "path": "0"
    },
    "2432": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98B"
    },
    "2435": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2436": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98B"
    },
    "2439": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7E"
    },
    "2442": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2691,
        2708
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2443": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2444": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2446": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2447": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2448": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2449": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2451": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2452": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2453": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2454": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2456": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2458": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2459": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2460": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "MUL",
      "path": "0"
    },
    "2461": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2708
      ],
      "op": "ADD",
      "path": "0"
    },
    "2462": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2719
      ],
      "op": "ADD",
      "path": "0"
    },
    "2463": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2719
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2464": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2719
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2469": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2719
      ],
      "op": "AND",
      "path": "0"
    },
    "2470": {
      "fn": "Election.getResult",
      "offset": [
        2691,
        2719
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "fn": "Election.getResult",
      "offset": [
        2748,
        2749
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 20
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "fn": "Election.getResult",
      "offset": [
        2748,
        2749
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2475": {
      "fn": "Election.getResult",
      "offset": [
        2617,
        2764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2476": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "2477": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B5"
    },
    "2480": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2481": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECE"
    },
    "2484": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2598,
        2601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2485": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2486": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2487": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "POP",
      "path": "0"
    },
    "2488": {
      "fn": "Election.getResult",
      "offset": [
        2598,
        2601
      ],
      "op": "POP",
      "path": "0"
    },
    "2489": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93A"
    },
    "2492": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2493": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2494": {
      "fn": "Election.getResult",
      "offset": [
        2554,
        2774
      ],
      "op": "POP",
      "path": "0"
    },
    "2495": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x5"
    },
    "2497": {
      "fn": "Election.getResult",
      "offset": [
        2805,
        2813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2498": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2499": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2500": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2501": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "LT",
      "path": "0"
    },
    "2502": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D1"
    },
    "2505": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2506": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D1"
    },
    "2509": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7E"
    },
    "2512": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2790,
        2814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2513": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2514": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2516": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2517": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2518": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2519": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2521": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2522": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2523": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2524": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2525": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2527": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2528": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2529": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2531": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2532": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2533": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2534": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2535": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2536": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2538": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2539": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2540": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "MUL",
      "path": "0"
    },
    "2541": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2542": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2543": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2544": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2546": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "AND",
      "path": "0"
    },
    "2547": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2548": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2549": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2551": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2552": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2553": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2554": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2555": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2556": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2557": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2558": {
      "fn": "Election.getResult",
      "offset": [
        2790,
        2814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2559": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2560": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2561": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2562": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2563": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0B"
    },
    "2566": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2567": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF38"
    },
    "2570": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2571": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2572": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2573": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2575": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2576": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2578": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2579": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2580": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DIV",
      "path": "0"
    },
    "2581": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MUL",
      "path": "0"
    },
    "2582": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2584": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2585": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2587": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2588": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2589": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2590": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2591": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2593": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2594": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2595": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2596": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2597": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2598": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2599": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2600": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2601": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2603": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2604": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2605": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2606": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2607": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA37"
    },
    "2610": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2611": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF38"
    },
    "2614": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2615": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2616": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2617": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2618": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA84"
    },
    "2621": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2622": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2623": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2625": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "LT",
      "path": "0"
    },
    "2626": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA59"
    },
    "2629": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2630": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2633": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2634": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2635": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2636": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DIV",
      "path": "0"
    },
    "2637": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MUL",
      "path": "0"
    },
    "2638": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2639": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2640": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2641": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2643": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2644": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2645": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA84"
    },
    "2648": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2649": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2650": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2651": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2652": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2653": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2654": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2656": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2657": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2659": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2661": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2662": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2663": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2664": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2665": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2666": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2667": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2668": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2669": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2671": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2672": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2673": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2675": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2676": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2677": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2678": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "GT",
      "path": "0"
    },
    "2679": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA67"
    },
    "2682": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2683": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2684": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2685": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SUB",
      "path": "0"
    },
    "2686": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2688": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "AND",
      "path": "0"
    },
    "2689": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2690": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2691": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2692": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2693": {
      "op": "POP"
    },
    "2694": {
      "op": "POP"
    },
    "2695": {
      "op": "POP"
    },
    "2696": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2697": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2698": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2699": {
      "op": "POP"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2703": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2704": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2705": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2706": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2707": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2708": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2713": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "AND",
      "path": "0"
    },
    "2714": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2716": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2717": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2718": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "ADD",
      "path": "0"
    },
    "2719": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2720": {
      "fn": "Election.getResult",
      "offset": [
        2783,
        2814
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "op": "POP"
    },
    "2724": {
      "offset": [
        1236,
        1237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2725": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "POP",
      "path": "0"
    },
    "2726": {
      "fn": "Election.getResult",
      "offset": [
        2350,
        2821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2727": {
      "fn": "Election.getResult",
      "jump": "o",
      "offset": [
        2350,
        2821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2728": {
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2729": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2731": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2732": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2733": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2734": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2735": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "LT",
      "path": "0"
    },
    "2736": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB8"
    },
    "2739": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2740": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2742": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2743": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2744": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2745": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2747": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2748": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2749": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2750": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2752": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2753": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2754": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2755": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2757": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2758": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2759": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MUL",
      "path": "0"
    },
    "2760": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2761": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2762": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2763": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2765": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2766": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2767": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2768": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2769": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2771": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2772": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2773": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "AND",
      "path": "0"
    },
    "2774": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2777": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE1"
    },
    "2780": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2781": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF38"
    },
    "2784": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        627,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2785": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2786": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2787": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2789": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2790": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2792": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2793": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2794": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DIV",
      "path": "0"
    },
    "2795": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MUL",
      "path": "0"
    },
    "2796": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2798": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2799": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2801": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2802": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2803": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2804": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2805": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2807": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2808": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2809": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2810": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2811": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2812": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2813": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2814": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2815": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2817": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2818": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2819": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2820": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2821": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0D"
    },
    "2824": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2825": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF38"
    },
    "2828": {
      "fn": "Election.getResult",
      "jump": "i",
      "offset": [
        627,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2829": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2830": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2831": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2832": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5A"
    },
    "2835": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2836": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2837": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2839": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "LT",
      "path": "0"
    },
    "2840": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2F"
    },
    "2843": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2844": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2847": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2848": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2849": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2850": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DIV",
      "path": "0"
    },
    "2851": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MUL",
      "path": "0"
    },
    "2852": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2853": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2854": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2855": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2857": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2858": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2859": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5A"
    },
    "2862": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2863": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2864": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2865": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2866": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2867": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2868": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2870": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2871": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2873": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2875": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2876": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2877": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2878": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2879": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2880": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2881": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2882": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2883": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2885": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2886": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2887": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2889": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2890": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2891": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2892": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "GT",
      "path": "0"
    },
    "2893": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3D"
    },
    "2896": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2897": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2898": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2899": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SUB",
      "path": "0"
    },
    "2900": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2902": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "AND",
      "path": "0"
    },
    "2903": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2904": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2905": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2906": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "offset": [
        627,
        660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2912": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2913": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2914": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "ADD",
      "path": "0"
    },
    "2915": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2916": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2917": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "offset": [
        627,
        660
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2925": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "AND",
      "path": "0"
    },
    "2926": {
      "fn": "Election.getResult",
      "offset": [
        627,
        660
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2927": {
      "fn": "Election.getResult",
      "jump": "o",
      "offset": [
        627,
        660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2928": {
      "op": "JUMPDEST"
    },
    "2929": {
      "op": "DUP3"
    },
    "2930": {
      "op": "DUP1"
    },
    "2931": {
      "op": "SLOAD"
    },
    "2932": {
      "op": "PUSH2",
      "value": "0xB7C"
    },
    "2935": {
      "op": "SWAP1"
    },
    "2936": {
      "op": "PUSH2",
      "value": "0xF38"
    },
    "2939": {
      "jump": "i",
      "op": "JUMP"
    },
    "2940": {
      "op": "JUMPDEST"
    },
    "2941": {
      "op": "SWAP1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2944": {
      "op": "MSTORE"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2949": {
      "op": "KECCAK256"
    },
    "2950": {
      "op": "SWAP1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2956": {
      "op": "SWAP1"
    },
    "2957": {
      "op": "DIV"
    },
    "2958": {
      "op": "DUP2"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "SWAP3"
    },
    "2961": {
      "op": "DUP3"
    },
    "2962": {
      "op": "PUSH2",
      "value": "0xB9E"
    },
    "2965": {
      "op": "JUMPI"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2968": {
      "op": "DUP6"
    },
    "2969": {
      "op": "SSTORE"
    },
    "2970": {
      "op": "PUSH2",
      "value": "0xBE4"
    },
    "2973": {
      "op": "JUMP"
    },
    "2974": {
      "op": "JUMPDEST"
    },
    "2975": {
      "op": "DUP3"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2978": {
      "op": "LT"
    },
    "2979": {
      "op": "PUSH2",
      "value": "0xBB7"
    },
    "2982": {
      "op": "JUMPI"
    },
    "2983": {
      "op": "DUP1"
    },
    "2984": {
      "op": "MLOAD"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2987": {
      "op": "NOT"
    },
    "2988": {
      "op": "AND"
    },
    "2989": {
      "op": "DUP4"
    },
    "2990": {
      "op": "DUP1"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "op": "OR"
    },
    "2993": {
      "op": "DUP6"
    },
    "2994": {
      "op": "SSTORE"
    },
    "2995": {
      "op": "PUSH2",
      "value": "0xBE4"
    },
    "2998": {
      "op": "JUMP"
    },
    "2999": {
      "op": "JUMPDEST"
    },
    "3000": {
      "op": "DUP3"
    },
    "3001": {
      "op": "DUP1"
    },
    "3002": {
      "op": "ADD"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "ADD"
    },
    "3006": {
      "op": "DUP6"
    },
    "3007": {
      "op": "SSTORE"
    },
    "3008": {
      "op": "DUP3"
    },
    "3009": {
      "op": "ISZERO"
    },
    "3010": {
      "op": "PUSH2",
      "value": "0xBE4"
    },
    "3013": {
      "op": "JUMPI"
    },
    "3014": {
      "op": "SWAP2"
    },
    "3015": {
      "op": "DUP3"
    },
    "3016": {
      "op": "ADD"
    },
    "3017": {
      "op": "JUMPDEST"
    },
    "3018": {
      "op": "DUP3"
    },
    "3019": {
      "op": "DUP2"
    },
    "3020": {
      "op": "GT"
    },
    "3021": {
      "op": "ISZERO"
    },
    "3022": {
      "op": "PUSH2",
      "value": "0xBE4"
    },
    "3025": {
      "op": "JUMPI"
    },
    "3026": {
      "op": "DUP3"
    },
    "3027": {
      "op": "MLOAD"
    },
    "3028": {
      "op": "DUP3"
    },
    "3029": {
      "op": "SSTORE"
    },
    "3030": {
      "op": "SWAP2"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3033": {
      "op": "ADD"
    },
    "3034": {
      "op": "SWAP2"
    },
    "3035": {
      "op": "SWAP1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3038": {
      "op": "ADD"
    },
    "3039": {
      "op": "SWAP1"
    },
    "3040": {
      "op": "PUSH2",
      "value": "0xBC9"
    },
    "3043": {
      "op": "JUMP"
    },
    "3044": {
      "op": "JUMPDEST"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "op": "PUSH2",
      "value": "0xAA4"
    },
    "3049": {
      "op": "SWAP3"
    },
    "3050": {
      "op": "SWAP2"
    },
    "3051": {
      "op": "POP"
    },
    "3052": {
      "op": "JUMPDEST"
    },
    "3053": {
      "op": "DUP1"
    },
    "3054": {
      "op": "DUP3"
    },
    "3055": {
      "op": "GT"
    },
    "3056": {
      "op": "ISZERO"
    },
    "3057": {
      "op": "PUSH2",
      "value": "0xAA4"
    },
    "3060": {
      "op": "JUMPI"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3063": {
      "op": "DUP2"
    },
    "3064": {
      "op": "SSTORE"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3067": {
      "op": "ADD"
    },
    "3068": {
      "op": "PUSH2",
      "value": "0xBEC"
    },
    "3071": {
      "op": "JUMP"
    },
    "3072": {
      "op": "JUMPDEST"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3077": {
      "op": "DUP3"
    },
    "3078": {
      "op": "DUP5"
    },
    "3079": {
      "op": "SUB"
    },
    "3080": {
      "op": "SLT"
    },
    "3081": {
      "op": "ISZERO"
    },
    "3082": {
      "op": "PUSH2",
      "value": "0xC12"
    },
    "3085": {
      "op": "JUMPI"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3088": {
      "op": "DUP1"
    },
    "3089": {
      "op": "REVERT"
    },
    "3090": {
      "op": "JUMPDEST"
    },
    "3091": {
      "op": "POP"
    },
    "3092": {
      "op": "CALLDATALOAD"
    },
    "3093": {
      "op": "SWAP2"
    },
    "3094": {
      "op": "SWAP1"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "jump": "o",
      "op": "JUMP"
    },
    "3097": {
      "op": "JUMPDEST"
    },
    "3098": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3108": {
      "op": "MSTORE"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3113": {
      "op": "MSTORE"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3118": {
      "op": "REVERT"
    },
    "3119": {
      "op": "JUMPDEST"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "op": "DUP5"
    },
    "3126": {
      "op": "SUB"
    },
    "3127": {
      "op": "SLT"
    },
    "3128": {
      "op": "ISZERO"
    },
    "3129": {
      "op": "PUSH2",
      "value": "0xC41"
    },
    "3132": {
      "op": "JUMPI"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3135": {
      "op": "DUP1"
    },
    "3136": {
      "op": "REVERT"
    },
    "3137": {
      "op": "JUMPDEST"
    },
    "3138": {
      "op": "DUP2"
    },
    "3139": {
      "op": "CALLDATALOAD"
    },
    "3140": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3149": {
      "op": "DUP1"
    },
    "3150": {
      "op": "DUP3"
    },
    "3151": {
      "op": "GT"
    },
    "3152": {
      "op": "ISZERO"
    },
    "3153": {
      "op": "PUSH2",
      "value": "0xC59"
    },
    "3156": {
      "op": "JUMPI"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3159": {
      "op": "DUP1"
    },
    "3160": {
      "op": "REVERT"
    },
    "3161": {
      "op": "JUMPDEST"
    },
    "3162": {
      "op": "DUP2"
    },
    "3163": {
      "op": "DUP5"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "op": "SWAP2"
    },
    "3166": {
      "op": "POP"
    },
    "3167": {
      "op": "DUP5"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3170": {
      "op": "DUP4"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "op": "SLT"
    },
    "3173": {
      "op": "PUSH2",
      "value": "0xC6D"
    },
    "3176": {
      "op": "JUMPI"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3179": {
      "op": "DUP1"
    },
    "3180": {
      "op": "REVERT"
    },
    "3181": {
      "op": "JUMPDEST"
    },
    "3182": {
      "op": "DUP2"
    },
    "3183": {
      "op": "CALLDATALOAD"
    },
    "3184": {
      "op": "DUP2"
    },
    "3185": {
      "op": "DUP2"
    },
    "3186": {
      "op": "GT"
    },
    "3187": {
      "op": "ISZERO"
    },
    "3188": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3191": {
      "op": "JUMPI"
    },
    "3192": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3195": {
      "op": "PUSH2",
      "value": "0xC19"
    },
    "3198": {
      "jump": "i",
      "op": "JUMP"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3202": {
      "op": "MLOAD"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3205": {
      "op": "DUP3"
    },
    "3206": {
      "op": "ADD"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3209": {
      "op": "NOT"
    },
    "3210": {
      "op": "SWAP1"
    },
    "3211": {
      "op": "DUP2"
    },
    "3212": {
      "op": "AND"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3215": {
      "op": "ADD"
    },
    "3216": {
      "op": "AND"
    },
    "3217": {
      "op": "DUP2"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "op": "SWAP1"
    },
    "3220": {
      "op": "DUP4"
    },
    "3221": {
      "op": "DUP3"
    },
    "3222": {
      "op": "GT"
    },
    "3223": {
      "op": "DUP2"
    },
    "3224": {
      "op": "DUP4"
    },
    "3225": {
      "op": "LT"
    },
    "3226": {
      "op": "OR"
    },
    "3227": {
      "op": "ISZERO"
    },
    "3228": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3231": {
      "op": "JUMPI"
    },
    "3232": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3235": {
      "op": "PUSH2",
      "value": "0xC19"
    },
    "3238": {
      "jump": "i",
      "op": "JUMP"
    },
    "3239": {
      "op": "JUMPDEST"
    },
    "3240": {
      "op": "DUP2"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3243": {
      "op": "MSTORE"
    },
    "3244": {
      "op": "DUP3"
    },
    "3245": {
      "op": "DUP2"
    },
    "3246": {
      "op": "MSTORE"
    },
    "3247": {
      "op": "DUP8"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3250": {
      "op": "DUP5"
    },
    "3251": {
      "op": "DUP8"
    },
    "3252": {
      "op": "ADD"
    },
    "3253": {
      "op": "ADD"
    },
    "3254": {
      "op": "GT"
    },
    "3255": {
      "op": "ISZERO"
    },
    "3256": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "3259": {
      "op": "JUMPI"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3262": {
      "op": "DUP1"
    },
    "3263": {
      "op": "REVERT"
    },
    "3264": {
      "op": "JUMPDEST"
    },
    "3265": {
      "op": "DUP3"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3268": {
      "op": "DUP7"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3272": {
      "op": "DUP4"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "CALLDATACOPY"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3277": {
      "op": "SWAP3"
    },
    "3278": {
      "op": "DUP2"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "op": "SWAP3"
    },
    "3284": {
      "op": "SWAP1"
    },
    "3285": {
      "op": "SWAP3"
    },
    "3286": {
      "op": "MSTORE"
    },
    "3287": {
      "op": "POP"
    },
    "3288": {
      "op": "SWAP6"
    },
    "3289": {
      "op": "SWAP5"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "op": "POP"
    },
    "3293": {
      "op": "POP"
    },
    "3294": {
      "op": "POP"
    },
    "3295": {
      "jump": "o",
      "op": "JUMP"
    },
    "3296": {
      "op": "JUMPDEST"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3299": {
      "op": "DUP2"
    },
    "3300": {
      "op": "MLOAD"
    },
    "3301": {
      "op": "DUP1"
    },
    "3302": {
      "op": "DUP5"
    },
    "3303": {
      "op": "MSTORE"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3306": {
      "op": "JUMPDEST"
    },
    "3307": {
      "op": "DUP2"
    },
    "3308": {
      "op": "DUP2"
    },
    "3309": {
      "op": "LT"
    },
    "3310": {
      "op": "ISZERO"
    },
    "3311": {
      "op": "PUSH2",
      "value": "0xD06"
    },
    "3314": {
      "op": "JUMPI"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3317": {
      "op": "DUP2"
    },
    "3318": {
      "op": "DUP6"
    },
    "3319": {
      "op": "ADD"
    },
    "3320": {
      "op": "DUP2"
    },
    "3321": {
      "op": "ADD"
    },
    "3322": {
      "op": "MLOAD"
    },
    "3323": {
      "op": "DUP7"
    },
    "3324": {
      "op": "DUP4"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "DUP3"
    },
    "3327": {
      "op": "ADD"
    },
    "3328": {
      "op": "MSTORE"
    },
    "3329": {
      "op": "ADD"
    },
    "3330": {
      "op": "PUSH2",
      "value": "0xCEA"
    },
    "3333": {
      "op": "JUMP"
    },
    "3334": {
      "op": "JUMPDEST"
    },
    "3335": {
      "op": "DUP2"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "GT"
    },
    "3338": {
      "op": "ISZERO"
    },
    "3339": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3342": {
      "op": "JUMPI"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3347": {
      "op": "DUP4"
    },
    "3348": {
      "op": "DUP8"
    },
    "3349": {
      "op": "ADD"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "op": "MSTORE"
    },
    "3352": {
      "op": "JUMPDEST"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3356": {
      "op": "ADD"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3359": {
      "op": "NOT"
    },
    "3360": {
      "op": "AND"
    },
    "3361": {
      "op": "SWAP3"
    },
    "3362": {
      "op": "SWAP1"
    },
    "3363": {
      "op": "SWAP3"
    },
    "3364": {
      "op": "ADD"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "SWAP3"
    },
    "3369": {
      "op": "SWAP2"
    },
    "3370": {
      "op": "POP"
    },
    "3371": {
      "op": "POP"
    },
    "3372": {
      "jump": "o",
      "op": "JUMP"
    },
    "3373": {
      "op": "JUMPDEST"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3376": {
      "op": "DUP2"
    },
    "3377": {
      "op": "MLOAD"
    },
    "3378": {
      "op": "AND"
    },
    "3379": {
      "op": "DUP3"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3385": {
      "op": "DUP3"
    },
    "3386": {
      "op": "ADD"
    },
    "3387": {
      "op": "MLOAD"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3392": {
      "op": "DUP6"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "op": "MSTORE"
    },
    "3395": {
      "op": "PUSH2",
      "value": "0xD4F"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3400": {
      "op": "DUP6"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "DUP3"
    },
    "3403": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3406": {
      "jump": "i",
      "op": "JUMP"
    },
    "3407": {
      "op": "JUMPDEST"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3410": {
      "op": "SWAP4"
    },
    "3411": {
      "op": "DUP5"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "op": "MLOAD"
    },
    "3414": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3419": {
      "op": "AND"
    },
    "3420": {
      "op": "SWAP5"
    },
    "3421": {
      "op": "SWAP1"
    },
    "3422": {
      "op": "SWAP4"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "SWAP4"
    },
    "3425": {
      "op": "SWAP1"
    },
    "3426": {
      "op": "SWAP4"
    },
    "3427": {
      "op": "MSTORE"
    },
    "3428": {
      "op": "POP"
    },
    "3429": {
      "op": "SWAP2"
    },
    "3430": {
      "op": "SWAP1"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "jump": "o",
      "op": "JUMP"
    },
    "3433": {
      "op": "JUMPDEST"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3438": {
      "op": "DUP1"
    },
    "3439": {
      "op": "DUP4"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "DUP2"
    },
    "3442": {
      "op": "DUP5"
    },
    "3443": {
      "op": "MSTORE"
    },
    "3444": {
      "op": "DUP1"
    },
    "3445": {
      "op": "DUP6"
    },
    "3446": {
      "op": "MLOAD"
    },
    "3447": {
      "op": "DUP1"
    },
    "3448": {
      "op": "DUP4"
    },
    "3449": {
      "op": "MSTORE"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3452": {
      "op": "DUP7"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "SWAP2"
    },
    "3455": {
      "op": "POP"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3458": {
      "op": "DUP2"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3461": {
      "op": "SHL"
    },
    "3462": {
      "op": "DUP8"
    },
    "3463": {
      "op": "ADD"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "SWAP3"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "op": "DUP4"
    },
    "3468": {
      "op": "DUP8"
    },
    "3469": {
      "op": "ADD"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "op": "JUMPDEST"
    },
    "3473": {
      "op": "DUP3"
    },
    "3474": {
      "op": "DUP2"
    },
    "3475": {
      "op": "LT"
    },
    "3476": {
      "op": "ISZERO"
    },
    "3477": {
      "op": "PUSH2",
      "value": "0xDBE"
    },
    "3480": {
      "op": "JUMPI"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3483": {
      "op": "NOT"
    },
    "3484": {
      "op": "DUP9"
    },
    "3485": {
      "op": "DUP7"
    },
    "3486": {
      "op": "SUB"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "op": "DUP5"
    },
    "3489": {
      "op": "MSTORE"
    },
    "3490": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3493": {
      "op": "DUP6"
    },
    "3494": {
      "op": "DUP4"
    },
    "3495": {
      "op": "MLOAD"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xD2D"
    },
    "3499": {
      "jump": "i",
      "op": "JUMP"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "SWAP5"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "SWAP3"
    },
    "3504": {
      "op": "DUP6"
    },
    "3505": {
      "op": "ADD"
    },
    "3506": {
      "op": "SWAP3"
    },
    "3507": {
      "op": "SWAP1"
    },
    "3508": {
      "op": "DUP6"
    },
    "3509": {
      "op": "ADD"
    },
    "3510": {
      "op": "SWAP1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3513": {
      "op": "ADD"
    },
    "3514": {
      "op": "PUSH2",
      "value": "0xD90"
    },
    "3517": {
      "op": "JUMP"
    },
    "3518": {
      "op": "JUMPDEST"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "op": "SWAP3"
    },
    "3521": {
      "op": "SWAP8"
    },
    "3522": {
      "op": "SWAP7"
    },
    "3523": {
      "op": "POP"
    },
    "3524": {
      "op": "POP"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "POP"
    },
    "3529": {
      "op": "POP"
    },
    "3530": {
      "jump": "o",
      "op": "JUMP"
    },
    "3531": {
      "op": "JUMPDEST"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3536": {
      "op": "DUP3"
    },
    "3537": {
      "op": "DUP5"
    },
    "3538": {
      "op": "SUB"
    },
    "3539": {
      "op": "SLT"
    },
    "3540": {
      "op": "ISZERO"
    },
    "3541": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3544": {
      "op": "JUMPI"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3547": {
      "op": "DUP1"
    },
    "3548": {
      "op": "REVERT"
    },
    "3549": {
      "op": "JUMPDEST"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "CALLDATALOAD"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "op": "SUB"
    },
    "3560": {
      "op": "DUP2"
    },
    "3561": {
      "op": "AND"
    },
    "3562": {
      "op": "DUP2"
    },
    "3563": {
      "op": "EQ"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3567": {
      "op": "JUMPI"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3570": {
      "op": "DUP1"
    },
    "3571": {
      "op": "REVERT"
    },
    "3572": {
      "op": "JUMPDEST"
    },
    "3573": {
      "op": "SWAP4"
    },
    "3574": {
      "op": "SWAP3"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "jump": "o",
      "op": "JUMP"
    },
    "3579": {
      "op": "JUMPDEST"
    },
    "3580": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3590": {
      "op": "MSTORE"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3595": {
      "op": "MSTORE"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3600": {
      "op": "REVERT"
    },
    "3601": {
      "op": "JUMPDEST"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3604": {
      "op": "DUP2"
    },
    "3605": {
      "op": "ADD"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3608": {
      "op": "DUP4"
    },
    "3609": {
      "op": "LT"
    },
    "3610": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "3613": {
      "op": "JUMPI"
    },
    "3614": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3624": {
      "op": "MSTORE"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3629": {
      "op": "MSTORE"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3634": {
      "op": "REVERT"
    },
    "3635": {
      "op": "JUMPDEST"
    },
    "3636": {
      "op": "SWAP2"
    },
    "3637": {
      "op": "SWAP1"
    },
    "3638": {
      "op": "MSTORE"
    },
    "3639": {
      "op": "SWAP1"
    },
    "3640": {
      "jump": "o",
      "op": "JUMP"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3644": {
      "op": "DUP2"
    },
    "3645": {
      "op": "MSTORE"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3648": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3653": {
      "op": "DUP4"
    },
    "3654": {
      "op": "ADD"
    },
    "3655": {
      "op": "DUP5"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xD2D"
    },
    "3659": {
      "jump": "i",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3663": {
      "op": "DUP5"
    },
    "3664": {
      "op": "AND"
    },
    "3665": {
      "op": "DUP2"
    },
    "3666": {
      "op": "MSTORE"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3671": {
      "op": "DUP3"
    },
    "3672": {
      "op": "ADD"
    },
    "3673": {
      "op": "MSTORE"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3676": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3681": {
      "op": "DUP4"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "DUP6"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3687": {
      "jump": "i",
      "op": "JUMP"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "SWAP1"
    },
    "3690": {
      "op": "POP"
    },
    "3691": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3696": {
      "op": "DUP4"
    },
    "3697": {
      "op": "AND"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3700": {
      "op": "DUP4"
    },
    "3701": {
      "op": "ADD"
    },
    "3702": {
      "op": "MSTORE"
    },
    "3703": {
      "op": "SWAP5"
    },
    "3704": {
      "op": "SWAP4"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "jump": "o",
      "op": "JUMP"
    },
    "3710": {
      "op": "JUMPDEST"
    },
    "3711": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3718": {
      "op": "SHL"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "REVERT"
    },
    "3732": {
      "op": "JUMPDEST"
    },
    "3733": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3740": {
      "op": "SHL"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3748": {
      "op": "MSTORE"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3753": {
      "op": "REVERT"
    },
    "3754": {
      "op": "JUMPDEST"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3757": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3762": {
      "op": "DUP1"
    },
    "3763": {
      "op": "DUP4"
    },
    "3764": {
      "op": "AND"
    },
    "3765": {
      "op": "DUP2"
    },
    "3766": {
      "op": "DUP2"
    },
    "3767": {
      "op": "EQ"
    },
    "3768": {
      "op": "ISZERO"
    },
    "3769": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "3772": {
      "op": "JUMPI"
    },
    "3773": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "3776": {
      "op": "PUSH2",
      "value": "0xE94"
    },
    "3779": {
      "jump": "i",
      "op": "JUMP"
    },
    "3780": {
      "op": "JUMPDEST"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "ADD"
    },
    "3784": {
      "op": "SWAP4"
    },
    "3785": {
      "op": "SWAP3"
    },
    "3786": {
      "op": "POP"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "op": "POP"
    },
    "3789": {
      "jump": "o",
      "op": "JUMP"
    },
    "3790": {
      "op": "JUMPDEST"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3795": {
      "op": "NOT"
    },
    "3796": {
      "op": "DUP3"
    },
    "3797": {
      "op": "EQ"
    },
    "3798": {
      "op": "ISZERO"
    },
    "3799": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "3802": {
      "op": "JUMPI"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "3806": {
      "op": "PUSH2",
      "value": "0xE94"
    },
    "3809": {
      "jump": "i",
      "op": "JUMP"
    },
    "3810": {
      "op": "JUMPDEST"
    },
    "3811": {
      "op": "POP"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3814": {
      "op": "ADD"
    },
    "3815": {
      "op": "SWAP1"
    },
    "3816": {
      "jump": "o",
      "op": "JUMP"
    },
    "3817": {
      "op": "JUMPDEST"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3820": {
      "op": "DUP1"
    },
    "3821": {
      "op": "DUP3"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3825": {
      "op": "SWAP1"
    },
    "3826": {
      "op": "DUP3"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "op": "PUSH20",
      "value": "0x6F6E6C792061646D696E2066756E6374696F6E73"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3852": {
      "op": "SHL"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3855": {
      "op": "DUP3"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "MSTORE"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3860": {
      "op": "ADD"
    },
    "3861": {
      "op": "SWAP1"
    },
    "3862": {
      "jump": "o",
      "op": "JUMP"
    },
    "3863": {
      "op": "JUMPDEST"
    },
    "3864": {
      "op": "DUP3"
    },
    "3865": {
      "op": "DUP2"
    },
    "3866": {
      "op": "MSTORE"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3871": {
      "op": "DUP3"
    },
    "3872": {
      "op": "ADD"
    },
    "3873": {
      "op": "MSTORE"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xF30"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3881": {
      "op": "DUP4"
    },
    "3882": {
      "op": "ADD"
    },
    "3883": {
      "op": "DUP5"
    },
    "3884": {
      "op": "PUSH2",
      "value": "0xCE0"
    },
    "3887": {
      "jump": "i",
      "op": "JUMP"
    },
    "3888": {
      "op": "JUMPDEST"
    },
    "3889": {
      "op": "SWAP5"
    },
    "3890": {
      "op": "SWAP4"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "op": "POP"
    },
    "3894": {
      "op": "POP"
    },
    "3895": {
      "jump": "o",
      "op": "JUMP"
    },
    "3896": {
      "op": "JUMPDEST"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3899": {
      "op": "DUP2"
    },
    "3900": {
      "op": "DUP2"
    },
    "3901": {
      "op": "SHR"
    },
    "3902": {
      "op": "SWAP1"
    },
    "3903": {
      "op": "DUP3"
    },
    "3904": {
      "op": "AND"
    },
    "3905": {
      "op": "DUP1"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xF4C"
    },
    "3909": {
      "op": "JUMPI"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3912": {
      "op": "DUP3"
    },
    "3913": {
      "op": "AND"
    },
    "3914": {
      "op": "SWAP2"
    },
    "3915": {
      "op": "POP"
    },
    "3916": {
      "op": "JUMPDEST"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3919": {
      "op": "DUP3"
    },
    "3920": {
      "op": "LT"
    },
    "3921": {
      "op": "DUP2"
    },
    "3922": {
      "op": "EQ"
    },
    "3923": {
      "op": "ISZERO"
    },
    "3924": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "3927": {
      "op": "JUMPI"
    },
    "3928": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3935": {
      "op": "SHL"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3938": {
      "op": "MSTORE"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3943": {
      "op": "MSTORE"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3948": {
      "op": "REVERT"
    },
    "3949": {
      "op": "JUMPDEST"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "op": "SWAP2"
    },
    "3952": {
      "op": "SWAP1"
    },
    "3953": {
      "op": "POP"
    },
    "3954": {
      "jump": "o",
      "op": "JUMP"
    },
    "3955": {
      "op": "JUMPDEST"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3958": {
      "op": "DUP3"
    },
    "3959": {
      "op": "NOT"
    },
    "3960": {
      "op": "DUP3"
    },
    "3961": {
      "op": "GT"
    },
    "3962": {
      "op": "ISZERO"
    },
    "3963": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3966": {
      "op": "JUMPI"
    },
    "3967": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3970": {
      "op": "PUSH2",
      "value": "0xE94"
    },
    "3973": {
      "jump": "i",
      "op": "JUMP"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "POP"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "SWAP1"
    },
    "3978": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "59cb7cc464b707a3a3b0a530c93225e961eabceb",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract Election {\n    //--------------------------------------------------------------------\n    // VARIABLES\n\n    address public admin;\n    uint256 public totalNumberOfVoters = 0;\n    uint256 public numberOfCandidates = 0;\n\n    ElectionState public electionCurrentState;\n    uint256 public voteEndTimestamp;\n\n    enum ElectionState {\n        NOTOPENYET,\n        OPEN,\n        ENDED\n    }\n\n    struct Candidate {\n        uint8 id;\n        string name;\n        uint32 votesCount;\n    }\n\n    struct Vote {\n        bool hasVoted;\n        uint256 candidateId;\n    }\n\n    Candidate[] public candidatesList;\n    mapping(address => Vote) votes;\n\n    //--------------------------------------------------------------------\n    // EVENTS\n\n    event VoteOpened(uint256 timestamp);\n    event VoteEnded(uint256 timestamp);\n    event CandidateAdded(uint256 id, string name);\n\n    //--------------------------------------------------------------------\n    // MODIFIERS\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"only admin functions\");\n        _;\n    }\n\n    modifier isElectionState(ElectionState _state) {\n        require(_state == electionCurrentState, \"\");\n        _;\n    }\n\n    //--------------------------------------------------------------------\n    // CONSTRUCTOR\n\n    constructor() {\n        admin = msg.sender;\n        electionCurrentState = ElectionState.NOTOPENYET;\n    }\n\n    //--------------------------------------------------------------------\n    // FUNCTIONS\n\n    function vote(uint256 _candidateId)\n        public\n        isElectionState(ElectionState.OPEN)\n    {\n        require(_candidateId < numberOfCandidates);\n        require(!votes[msg.sender].hasVoted, \"Already voted\");\n        votes[msg.sender] = Vote(true, _candidateId);\n        candidatesList[_candidateId].votesCount++;\n        totalNumberOfVoters++;\n    }\n\n    function getVoteCount(uint256 _candidateId) public view returns (uint256) {\n        return candidatesList[_candidateId].votesCount;\n    }\n\n    function getUserVote(address _user) public view returns (uint256) {\n        require(votes[_user].hasVoted, \"User Didn't vote\");\n        return votes[_user].candidateId;\n    }\n\n    function getCandidatesList() public view returns (Candidate[] memory) {\n        return candidatesList;\n    }\n\n    function getResult()\n        public\n        view\n        isElectionState(ElectionState.ENDED)\n        returns (Candidate memory)\n    {\n        uint256 maxCount = 0;\n        uint256 winnerId = 0;\n\n        for (uint256 i = 0; i < numberOfCandidates; i++) {\n            if (candidatesList[i].votesCount > maxCount) {\n                maxCount = candidatesList[i].votesCount;\n                winnerId = i;\n            }\n        }\n        return candidatesList[winnerId];\n    }\n\n    //--------------------------------------------------------------------\n    // ADMIN FUNCTIONS\n\n    function openVoting(uint256 _voteDuration)\n        public\n        onlyAdmin\n        isElectionState(ElectionState.NOTOPENYET)\n    {\n        require(\n            candidatesList.length > 0,\n            \"Can't open election with no candidate\"\n        );\n        voteEndTimestamp = block.timestamp + _voteDuration;\n        electionCurrentState = ElectionState.OPEN;\n\n        emit VoteOpened(block.timestamp);\n    }\n\n    function addCandidate(string memory _name)\n        public\n        onlyAdmin\n        isElectionState(ElectionState.NOTOPENYET)\n    {\n        uint256 newId = numberOfCandidates;\n        candidatesList.push(Candidate(uint8(newId), _name, 0));\n        numberOfCandidates++;\n\n        emit CandidateAdded(newId, _name);\n    }\n\n    function endVoting() external onlyAdmin {\n        require(block.timestamp >= voteEndTimestamp, \"Vote duration not ended\");\n        electionCurrentState = ElectionState.ENDED;\n\n        emit VoteEnded(block.timestamp);\n    }\n}\n",
  "sourceMap": "58:3833:0:-:0;;;238:1;201:38;;281:1;245:37;;1345:106;;;;;;;;;-1:-1:-1;1369:5:0;:18;;1377:10;-1:-1:-1;;;;;;1369:18:0;;;;;;1397:20;:47;;-1:-1:-1;;1397:47:0;;;58:3833;;;;;;",
  "sourcePath": "contracts/Election.sol",
  "type": "contract"
}